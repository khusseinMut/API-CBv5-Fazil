{
  "stats": {
    "suites": 27,
    "tests": 55,
    "passes": 55,
    "pending": 0,
    "failures": 0,
    "start": "2023-05-22T22:51:19.940Z",
    "end": "2023-05-22T22:51:40.022Z",
    "duration": 20082,
    "testsRegistered": 55,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "79a4ef8c-ff5a-4ddf-b564-55546f5fd0a3",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 282,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
          "err": {},
          "uuid": "c0d6a425-7532-4879-99f3-9e43557ae5d7",
          "parentUUID": "79a4ef8c-ff5a-4ddf-b564-55546f5fd0a3",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after all\" hook: Delete all clients in \"{root}\"",
          "fullTitle": "\"after all\" hook: Delete all clients in \"{root}\"",
          "timedOut": false,
          "duration": 8611,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
          "err": {},
          "uuid": "38af417b-e68a-410f-a4c5-79463a7b3710",
          "parentUUID": "79a4ef8c-ff5a-4ddf-b564-55546f5fd0a3",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "eaada6c5-8ba7-4f82-a6f8-7f52a7f8b067",
          "title": "Autorization test",
          "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/auth.spec.js",
          "file": "/tests/auth.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "850e78ca-1631-4c7e-8a7b-b9110aa6e147",
              "title": "Autorization with valid data",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/auth.spec.js",
              "file": "/tests/auth.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Autorization with valid data\"",
                  "fullTitle": "Autorization test Autorization with valid data \"before all\" hook in \"Autorization with valid data\"",
                  "timedOut": false,
                  "duration": 219,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "43ce7b6d-ce5d-42ec-8603-01874eae8972",
                  "parentUUID": "850e78ca-1631-4c7e-8a7b-b9110aa6e147",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 200",
                  "fullTitle": "Autorization test Autorization with valid data Response status code is 200",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "e0061d3e-bb32-497a-84ca-886b49719977",
                  "parentUUID": "850e78ca-1631-4c7e-8a7b-b9110aa6e147",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Autorization test Autorization with valid data Response body returns correct message",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "1867499b-e90b-423f-ba9c-af5a3204ab31",
                  "parentUUID": "850e78ca-1631-4c7e-8a7b-b9110aa6e147",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check the response has token",
                  "fullTitle": "Autorization test Autorization with valid data Check the response has token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "d43cc229-1608-4a3b-8e7b-36adccddde20",
                  "parentUUID": "850e78ca-1631-4c7e-8a7b-b9110aa6e147",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body does not show password",
                  "fullTitle": "Autorization test Autorization with valid data Response body does not show password",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "e63dc317-ffc2-49da-bdd1-d83bf9640bf9",
                  "parentUUID": "850e78ca-1631-4c7e-8a7b-b9110aa6e147",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e0061d3e-bb32-497a-84ca-886b49719977",
                "1867499b-e90b-423f-ba9c-af5a3204ab31",
                "d43cc229-1608-4a3b-8e7b-36adccddde20",
                "e63dc317-ffc2-49da-bdd1-d83bf9640bf9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1534234d-6e07-45d7-999c-f9262c49a188",
              "title": "Autorization with invalid data",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/auth.spec.js",
              "file": "/tests/auth.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Autorization with invalid data\"",
                  "fullTitle": "Autorization test Autorization with invalid data \"before all\" hook in \"Autorization with invalid data\"",
                  "timedOut": false,
                  "duration": 161,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "45fa88a1-d2df-4930-8296-6715ba27febd",
                  "parentUUID": "1534234d-6e07-45d7-999c-f9262c49a188",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 400",
                  "fullTitle": "Autorization test Autorization with invalid data Response status code is 400",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "7fef0c3f-dbc3-4c32-944e-b4c61e2293eb",
                  "parentUUID": "1534234d-6e07-45d7-999c-f9262c49a188",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Autorization test Autorization with invalid data Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "83b4a7fd-d0ee-4310-b445-01b5b8b7e5b5",
                  "parentUUID": "1534234d-6e07-45d7-999c-f9262c49a188",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7fef0c3f-dbc3-4c32-944e-b4c61e2293eb",
                "83b4a7fd-d0ee-4310-b445-01b5b8b7e5b5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "bd0e99b8-3833-4a42-9472-25ede4538c12",
              "title": "Autorization with empty data",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/auth.spec.js",
              "file": "/tests/auth.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Autorization with empty data\"",
                  "fullTitle": "Autorization test Autorization with empty data \"before all\" hook in \"Autorization with empty data\"",
                  "timedOut": false,
                  "duration": 155,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "020ca6d1-76ca-496c-8e78-8f84a4abec1b",
                  "parentUUID": "bd0e99b8-3833-4a42-9472-25ede4538c12",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 400",
                  "fullTitle": "Autorization test Autorization with empty data Response status code is 400",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "42c4f8fd-b2b6-4ffd-919e-c690757b8321",
                  "parentUUID": "bd0e99b8-3833-4a42-9472-25ede4538c12",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Autorization test Autorization with empty data Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "e7ef8a7c-eece-4541-b9a7-c636533c7955",
                  "parentUUID": "bd0e99b8-3833-4a42-9472-25ede4538c12",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "42c4f8fd-b2b6-4ffd-919e-c690757b8321",
                "e7ef8a7c-eece-4541-b9a7-c636533c7955"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "780336f7-d311-4ef5-a60a-3edd67e4b35e",
              "title": "Check if the email was trimmed",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/auth.spec.js",
              "file": "/tests/auth.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Check if the email was trimmed\"",
                  "fullTitle": "Autorization test Check if the email was trimmed \"before all\" hook in \"Check if the email was trimmed\"",
                  "timedOut": false,
                  "duration": 227,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "c7f67765-4923-4f77-9c16-f9ab16f31f2d",
                  "parentUUID": "780336f7-d311-4ef5-a60a-3edd67e4b35e",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 200",
                  "fullTitle": "Autorization test Check if the email was trimmed Response status code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "6ea9119b-eadd-4854-bfa2-6f17563347c1",
                  "parentUUID": "780336f7-d311-4ef5-a60a-3edd67e4b35e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body message returns a correct message",
                  "fullTitle": "Autorization test Check if the email was trimmed Response body message returns a correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "09351a4b-5d94-4c34-99d0-d91143b954b6",
                  "parentUUID": "780336f7-d311-4ef5-a60a-3edd67e4b35e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6ea9119b-eadd-4854-bfa2-6f17563347c1",
                "09351a4b-5d94-4c34-99d0-d91143b954b6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "ce74f31d-5bf3-4aa2-b78d-8d33cd46e4cc",
          "title": "Clients tests",
          "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/client.spec.js",
          "file": "/tests/client.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "f6c3266e-8723-43d3-aaf9-de2d61c24982",
              "title": "Client create",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/client.spec.js",
              "file": "/tests/client.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Client create\"",
                  "fullTitle": "Clients tests Client create \"before all\" hook in \"Client create\"",
                  "timedOut": false,
                  "duration": 237,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "41a1da75-6889-4542-a2bb-0ac2bdf410b5",
                  "parentUUID": "f6c3266e-8723-43d3-aaf9-de2d61c24982",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response code is 200",
                  "fullTitle": "Clients tests Client create Response code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "4ec39381-2d30-4c91-99b5-5bd310505ac7",
                  "parentUUID": "f6c3266e-8723-43d3-aaf9-de2d61c24982",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body message returns is correct",
                  "fullTitle": "Clients tests Client create Response body message returns is correct",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('Client created');",
                  "err": {},
                  "uuid": "e49e7f56-5aac-4163-b467-90c8d0f030d5",
                  "parentUUID": "f6c3266e-8723-43d3-aaf9-de2d61c24982",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns success is true",
                  "fullTitle": "Clients tests Client create Response body returns success is true",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body).to.have.property('success', true);",
                  "err": {},
                  "uuid": "765e026a-a5cd-442c-bc23-33874ead2433",
                  "parentUUID": "f6c3266e-8723-43d3-aaf9-de2d61c24982",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4ec39381-2d30-4c91-99b5-5bd310505ac7",
                "e49e7f56-5aac-4163-b467-90c8d0f030d5",
                "765e026a-a5cd-442c-bc23-33874ead2433"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a3e9098a-f3e2-4932-a925-02de7c04c2f0",
              "title": "Get all clients",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/client.spec.js",
              "file": "/tests/client.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Get all clients\"",
                  "fullTitle": "Clients tests Get all clients \"before all\" hook in \"Get all clients\"",
                  "timedOut": false,
                  "duration": 245,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "bc8281da-5740-4a7d-b3c7-3b7a0a7a15b9",
                  "parentUUID": "a3e9098a-f3e2-4932-a925-02de7c04c2f0",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response code is 200",
                  "fullTitle": "Clients tests Get all clients Response code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "e745bde6-0dcc-4956-96cc-d71293a9ba5e",
                  "parentUUID": "a3e9098a-f3e2-4932-a925-02de7c04c2f0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body message returns is correct",
                  "fullTitle": "Clients tests Get all clients Response body message returns is correct",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('ClientSearch ok');",
                  "err": {},
                  "uuid": "59490f72-0b81-4396-beb6-a08ec7eaecf8",
                  "parentUUID": "a3e9098a-f3e2-4932-a925-02de7c04c2f0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body contains users array",
                  "fullTitle": "Clients tests Get all clients Response body contains users array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.payload.items).to.be.an('array');",
                  "err": {},
                  "uuid": "0f573899-e76f-4a86-a17d-6cb861d5a71e",
                  "parentUUID": "a3e9098a-f3e2-4932-a925-02de7c04c2f0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e745bde6-0dcc-4956-96cc-d71293a9ba5e",
                "59490f72-0b81-4396-beb6-a08ec7eaecf8",
                "0f573899-e76f-4a86-a17d-6cb861d5a71e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "6f48aa56-d842-4de2-a9ae-bfa0748e07bc",
              "title": "Get client by ID",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/client.spec.js",
              "file": "/tests/client.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Get client by ID\"",
                  "fullTitle": "Clients tests Get client by ID \"before all\" hook in \"Get client by ID\"",
                  "timedOut": false,
                  "duration": 467,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "8d1efd84-d76f-45f1-896f-3bca5a52d4b4",
                  "parentUUID": "6f48aa56-d842-4de2-a9ae-bfa0748e07bc",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 200",
                  "fullTitle": "Clients tests Get client by ID Response status code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "322d8f90-3cbf-47c2-9536-f744a938e5e7",
                  "parentUUID": "6f48aa56-d842-4de2-a9ae-bfa0748e07bc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Clients tests Get client by ID Response body returns correct message",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('Get Client by id ok');",
                  "err": {},
                  "uuid": "abc30b50-b364-4ed7-bec4-00cd5c6aad43",
                  "parentUUID": "6f48aa56-d842-4de2-a9ae-bfa0748e07bc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check if the response returns right Id",
                  "fullTitle": "Clients tests Get client by ID Check if the response returns right Id",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.payload._id).to.eq(\"\".concat(clientId));",
                  "err": {},
                  "uuid": "60cb0d25-c387-45e8-9f57-4a8267b54fbb",
                  "parentUUID": "6f48aa56-d842-4de2-a9ae-bfa0748e07bc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "322d8f90-3cbf-47c2-9536-f744a938e5e7",
                "abc30b50-b364-4ed7-bec4-00cd5c6aad43",
                "60cb0d25-c387-45e8-9f57-4a8267b54fbb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0d11818a-0c02-4926-b2f8-ab1a34f4102d",
              "title": "Get the client by name",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/client.spec.js",
              "file": "/tests/client.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Get the client by name\"",
                  "fullTitle": "Clients tests Get the client by name \"before all\" hook in \"Get the client by name\"",
                  "timedOut": false,
                  "duration": 687,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "f84fdbd6-af7a-40bb-ab38-2c166d3d4304",
                  "parentUUID": "0d11818a-0c02-4926-b2f8-ab1a34f4102d",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 200",
                  "fullTitle": "Clients tests Get the client by name Response status code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "d9507fd4-6e61-4f79-b3ce-e6608119c453",
                  "parentUUID": "0d11818a-0c02-4926-b2f8-ab1a34f4102d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Clients tests Get the client by name Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('ClientSearch ok');",
                  "err": {},
                  "uuid": "b9e5cafd-a8f0-41a3-8eb9-7f14e5a07560",
                  "parentUUID": "0d11818a-0c02-4926-b2f8-ab1a34f4102d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response returns 1 client",
                  "fullTitle": "Clients tests Get the client by name Response returns 1 client",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.payload.items).to.be.an('array').to.have.lengthOf.above(0);",
                  "err": {},
                  "uuid": "d12d7218-a521-40ee-8573-86617af03d3c",
                  "parentUUID": "0d11818a-0c02-4926-b2f8-ab1a34f4102d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check if the client name is right",
                  "fullTitle": "Clients tests Get the client by name Check if the client name is right",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.payload.items[0].name).to.eq(clientName);",
                  "err": {},
                  "uuid": "dce7977b-1668-4a96-a85e-97f77f83413c",
                  "parentUUID": "0d11818a-0c02-4926-b2f8-ab1a34f4102d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d9507fd4-6e61-4f79-b3ce-e6608119c453",
                "b9e5cafd-a8f0-41a3-8eb9-7f14e5a07560",
                "d12d7218-a521-40ee-8573-86617af03d3c",
                "dce7977b-1668-4a96-a85e-97f77f83413c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f810b920-5806-4e26-96b1-c5f71ff24a21",
              "title": "Check if the name was actually updated",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/client.spec.js",
              "file": "/tests/client.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Check if the name was actually updated\"",
                  "fullTitle": "Clients tests Check if the name was actually updated \"before all\" hook in \"Check if the name was actually updated\"",
                  "timedOut": false,
                  "duration": 1063,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "7fee5f4e-0534-432b-a753-5e8ac9b621fe",
                  "parentUUID": "f810b920-5806-4e26-96b1-c5f71ff24a21",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 200",
                  "fullTitle": "Clients tests Check if the name was actually updated Response status code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "26ac4bf6-3294-4f5e-b9d5-4538ee0e878b",
                  "parentUUID": "f810b920-5806-4e26-96b1-c5f71ff24a21",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Clients tests Check if the name was actually updated Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('Client updated');",
                  "err": {},
                  "uuid": "84ae0651-c14d-4995-a6bb-1e59803fe4bd",
                  "parentUUID": "f810b920-5806-4e26-96b1-c5f71ff24a21",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check if the client name was updated",
                  "fullTitle": "Clients tests Check if the name was actually updated Check if the client name was updated",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(beforeName).not.to.eq(afterName);",
                  "err": {},
                  "uuid": "deb09401-c957-4eef-a9ef-7c97b41dee35",
                  "parentUUID": "f810b920-5806-4e26-96b1-c5f71ff24a21",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "26ac4bf6-3294-4f5e-b9d5-4538ee0e878b",
                "84ae0651-c14d-4995-a6bb-1e59803fe4bd",
                "deb09401-c957-4eef-a9ef-7c97b41dee35"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9e4c3038-802c-4471-8558-e0515d134e06",
              "title": "Update client",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/client.spec.js",
              "file": "/tests/client.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Update client\"",
                  "fullTitle": "Clients tests Update client \"before all\" hook in \"Update client\"",
                  "timedOut": false,
                  "duration": 431,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "f447de59-504a-431e-ab0d-2aec46d08e10",
                  "parentUUID": "9e4c3038-802c-4471-8558-e0515d134e06",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 200",
                  "fullTitle": "Clients tests Update client Response status code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "230dfbbd-6a3d-4db7-8de2-5eb434d63a3e",
                  "parentUUID": "9e4c3038-802c-4471-8558-e0515d134e06",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Clients tests Update client Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('Client updated');",
                  "err": {},
                  "uuid": "79625dac-4803-4bfd-bc85-4d380e397bd3",
                  "parentUUID": "9e4c3038-802c-4471-8558-e0515d134e06",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "230dfbbd-6a3d-4db7-8de2-5eb434d63a3e",
                "79625dac-4803-4bfd-bc85-4d380e397bd3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "61d3396e-6d7f-4e52-9bf0-4db157be7321",
              "title": "Delete the client",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/client.spec.js",
              "file": "/tests/client.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Delete the client\"",
                  "fullTitle": "Clients tests Delete the client \"before all\" hook in \"Delete the client\"",
                  "timedOut": false,
                  "duration": 472,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "e118b1b0-b82c-4a9d-9a7a-b80ff7c61a0e",
                  "parentUUID": "61d3396e-6d7f-4e52-9bf0-4db157be7321",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 200",
                  "fullTitle": "Clients tests Delete the client Response status code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "2f45cfd2-2381-47fc-b878-5313e6aff45f",
                  "parentUUID": "61d3396e-6d7f-4e52-9bf0-4db157be7321",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Clients tests Delete the client Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('Client deleted');",
                  "err": {},
                  "uuid": "4a922303-a89b-4382-9fd1-84651fd2c9ca",
                  "parentUUID": "61d3396e-6d7f-4e52-9bf0-4db157be7321",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2f45cfd2-2381-47fc-b878-5313e6aff45f",
                "4a922303-a89b-4382-9fd1-84651fd2c9ca"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "0f2d5358-7e67-4c18-913b-36d70176e4a4",
              "title": "Check if the client actually deleted",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/client.spec.js",
              "file": "/tests/client.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Check if the client actually deleted\"",
                  "fullTitle": "Clients tests Check if the client actually deleted \"before all\" hook in \"Check if the client actually deleted\"",
                  "timedOut": false,
                  "duration": 734,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "5a3e7496-ca5f-4b4f-a75c-7645a424101a",
                  "parentUUID": "0f2d5358-7e67-4c18-913b-36d70176e4a4",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 404",
                  "fullTitle": "Clients tests Check if the client actually deleted Response status code is 404",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(404);",
                  "err": {},
                  "uuid": "a96481bf-952c-41ad-8ed6-6cd7dc5ee7af",
                  "parentUUID": "0f2d5358-7e67-4c18-913b-36d70176e4a4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Clients tests Check if the client actually deleted Response body returns correct message",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('No client for provided id');",
                  "err": {},
                  "uuid": "030bcccb-3380-4d50-ae10-3c04b3e7c273",
                  "parentUUID": "0f2d5358-7e67-4c18-913b-36d70176e4a4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a96481bf-952c-41ad-8ed6-6cd7dc5ee7af",
                "030bcccb-3380-4d50-ae10-3c04b3e7c273"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "9b0feb54-955c-4c91-86d9-7a79f4cb1f22",
          "title": "Registration test",
          "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/registration.spec.js",
          "file": "/tests/registration.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "47d883aa-1961-4440-ae71-150bd718b470",
              "title": "Register/create news user with valid credentials",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/registration.spec.js",
              "file": "/tests/registration.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Register/create news user with valid credentials\"",
                  "fullTitle": "Registration test Register/create news user with valid credentials \"before all\" hook in \"Register/create news user with valid credentials\"",
                  "timedOut": false,
                  "duration": 603,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "67231450-2009-4c98-bb84-afa6ba264327",
                  "parentUUID": "47d883aa-1961-4440-ae71-150bd718b470",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 201",
                  "fullTitle": "Registration test Register/create news user with valid credentials Response status code is 201",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(201);",
                  "err": {},
                  "uuid": "55494a61-42c8-43f8-a9af-125e21bd8ac7",
                  "parentUUID": "47d883aa-1961-4440-ae71-150bd718b470",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Registration test Register/create news user with valid credentials Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('User created successfully. Please check your email and verify it');",
                  "err": {},
                  "uuid": "918f6b4f-5218-46c4-9c08-348969287ebf",
                  "parentUUID": "47d883aa-1961-4440-ae71-150bd718b470",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "55494a61-42c8-43f8-a9af-125e21bd8ac7",
                "918f6b4f-5218-46c4-9c08-348969287ebf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f2969def-ab7a-45ca-b9dc-422f2395661d",
              "title": "Register/create new user without companyName",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/registration.spec.js",
              "file": "/tests/registration.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Register/create new user without companyName\"",
                  "fullTitle": "Registration test Register/create new user without companyName \"before all\" hook in \"Register/create new user without companyName\"",
                  "timedOut": false,
                  "duration": 533,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "4ac58cd3-bd31-4840-813d-a66f521a7fb9",
                  "parentUUID": "f2969def-ab7a-45ca-b9dc-422f2395661d",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 201",
                  "fullTitle": "Registration test Register/create new user without companyName Response status code is 201",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(201);",
                  "err": {},
                  "uuid": "27ffe18e-5ebe-4a34-ab41-2a125e30e6dc",
                  "parentUUID": "f2969def-ab7a-45ca-b9dc-422f2395661d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Registration test Register/create new user without companyName Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('User created successfully. Please check your email and verify it');",
                  "err": {},
                  "uuid": "392a114c-ac4e-47e7-aa98-51e2f9d8135e",
                  "parentUUID": "f2969def-ab7a-45ca-b9dc-422f2395661d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "27ffe18e-5ebe-4a34-ab41-2a125e30e6dc",
                "392a114c-ac4e-47e7-aa98-51e2f9d8135e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1f68208b-1642-432e-aabc-074ced4e5c44",
              "title": "Register/create new user without firstName",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/registration.spec.js",
              "file": "/tests/registration.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Register/create new user without firstName\"",
                  "fullTitle": "Registration test Register/create new user without firstName \"before all\" hook in \"Register/create new user without firstName\"",
                  "timedOut": false,
                  "duration": 611,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "8428da62-d121-4f8b-984e-0db3bcf62585",
                  "parentUUID": "1f68208b-1642-432e-aabc-074ced4e5c44",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 404",
                  "fullTitle": "Registration test Register/create new user without firstName Response status code is 404",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(404);",
                  "err": {},
                  "uuid": "dbdb56bd-13ce-48ac-91b7-1cb0ebe6fdfe",
                  "parentUUID": "1f68208b-1642-432e-aabc-074ced4e5c44",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Registration test Register/create new user without firstName Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('User was not created');",
                  "err": {},
                  "uuid": "3130f05b-a9ec-4bcf-996a-0de41b4b5887",
                  "parentUUID": "1f68208b-1642-432e-aabc-074ced4e5c44",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "dbdb56bd-13ce-48ac-91b7-1cb0ebe6fdfe",
                "3130f05b-a9ec-4bcf-996a-0de41b4b5887"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "b64fc915-671b-4cf1-b5da-06a3237be92e",
              "title": "Register/create new user without lastName",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/registration.spec.js",
              "file": "/tests/registration.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Register/create new user without lastName\"",
                  "fullTitle": "Registration test Register/create new user without lastName \"before all\" hook in \"Register/create new user without lastName\"",
                  "timedOut": false,
                  "duration": 613,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "9b87961b-b484-4910-843d-00a71ca4c065",
                  "parentUUID": "b64fc915-671b-4cf1-b5da-06a3237be92e",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 404",
                  "fullTitle": "Registration test Register/create new user without lastName Response status code is 404",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(404);",
                  "err": {},
                  "uuid": "0ceeeeed-5e03-4c14-9ce4-1acf5385cede",
                  "parentUUID": "b64fc915-671b-4cf1-b5da-06a3237be92e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Registration test Register/create new user without lastName Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('User was not created');",
                  "err": {},
                  "uuid": "6ce2978a-f52e-4927-879a-7d4587dc997b",
                  "parentUUID": "b64fc915-671b-4cf1-b5da-06a3237be92e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0ceeeeed-5e03-4c14-9ce4-1acf5385cede",
                "6ce2978a-f52e-4927-879a-7d4587dc997b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "13d8b163-a5f1-4ea9-9afe-786e131dfa5d",
              "title": "Register/create new user without email",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/registration.spec.js",
              "file": "/tests/registration.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Register/create new user without email\"",
                  "fullTitle": "Registration test Register/create new user without email \"before all\" hook in \"Register/create new user without email\"",
                  "timedOut": false,
                  "duration": 614,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "831da1cd-9cc2-4f04-b9a1-bc6aec0d1831",
                  "parentUUID": "13d8b163-a5f1-4ea9-9afe-786e131dfa5d",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 404",
                  "fullTitle": "Registration test Register/create new user without email Response status code is 404",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(404);",
                  "err": {},
                  "uuid": "9af9631b-f6a7-496f-b0c8-41a406ed2332",
                  "parentUUID": "13d8b163-a5f1-4ea9-9afe-786e131dfa5d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Registration test Register/create new user without email Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('User was not created');",
                  "err": {},
                  "uuid": "83910f5f-13b6-4208-8be3-221472b255d6",
                  "parentUUID": "13d8b163-a5f1-4ea9-9afe-786e131dfa5d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9af9631b-f6a7-496f-b0c8-41a406ed2332",
                "83910f5f-13b6-4208-8be3-221472b255d6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7c1eeb76-320f-49eb-b00c-661bd975703b",
              "title": "Register/create new user without password",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/registration.spec.js",
              "file": "/tests/registration.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Register/create new user without password\"",
                  "fullTitle": "Registration test Register/create new user without password \"before all\" hook in \"Register/create new user without password\"",
                  "timedOut": false,
                  "duration": 61,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "016a97ca-8058-4213-93b0-416cb228d24b",
                  "parentUUID": "7c1eeb76-320f-49eb-b00c-661bd975703b",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 400",
                  "fullTitle": "Registration test Register/create new user without password Response status code is 400",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(400);",
                  "err": {},
                  "uuid": "aaffb31e-e40c-450e-9fe7-a85206057c66",
                  "parentUUID": "7c1eeb76-320f-49eb-b00c-661bd975703b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Registration test Register/create new user without password Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('Wrong password format');",
                  "err": {},
                  "uuid": "8570a0ba-5a3b-4b1e-b9df-1008fc378edd",
                  "parentUUID": "7c1eeb76-320f-49eb-b00c-661bd975703b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "aaffb31e-e40c-450e-9fe7-a85206057c66",
                "8570a0ba-5a3b-4b1e-b9df-1008fc378edd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "942cc9e7-a542-4da7-b6bd-dc21d12dd774",
              "title": "Create a user with existing email",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/registration.spec.js",
              "file": "/tests/registration.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Create a user with existing email\"",
                  "fullTitle": "Registration test Create a user with existing email \"before all\" hook in \"Create a user with existing email\"",
                  "timedOut": false,
                  "duration": 137,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "d243ddaa-eaef-45e6-a27e-f912d45b7475",
                  "parentUUID": "942cc9e7-a542-4da7-b6bd-dc21d12dd774",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 409",
                  "fullTitle": "Registration test Create a user with existing email Response status code is 409",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(409);",
                  "err": {},
                  "uuid": "3d2b72bb-faf9-4e1c-93ff-43866fa8ed31",
                  "parentUUID": "942cc9e7-a542-4da7-b6bd-dc21d12dd774",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Registration test Create a user with existing email Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('User with this e-mail exists');",
                  "err": {},
                  "uuid": "e6c2a2c9-5ade-4544-905c-e186c7325c69",
                  "parentUUID": "942cc9e7-a542-4da7-b6bd-dc21d12dd774",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3d2b72bb-faf9-4e1c-93ff-43866fa8ed31",
                "e6c2a2c9-5ade-4544-905c-e186c7325c69"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "b418aec8-8dbc-4eaa-ae09-4cac4aaab2d1",
          "title": "Various tests",
          "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/various-tests.js",
          "file": "/tests/various-tests.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "564e797e-37ec-46bc-912c-b0f62c22b764",
              "title": "Email verification",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/various-tests.js",
              "file": "/tests/various-tests.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Email verification\"",
                  "fullTitle": "Various tests Email verification \"before all\" hook in \"Email verification\"",
                  "timedOut": false,
                  "duration": 1309,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "e8359750-da9a-485e-816b-79c1ea272a60",
                  "parentUUID": "564e797e-37ec-46bc-912c-b0f62c22b764",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Check the response status",
                  "fullTitle": "Various tests Email verification Check the response status",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(res.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "1b71ea46-123f-4961-89c0-34c743262210",
                  "parentUUID": "564e797e-37ec-46bc-912c-b0f62c22b764",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check the response message",
                  "fullTitle": "Various tests Email verification Check the response message",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(res.body.message).to.include('confirmed');",
                  "err": {},
                  "uuid": "b925d3aa-8a1b-49e2-aaf8-c1a3b8f2435c",
                  "parentUUID": "564e797e-37ec-46bc-912c-b0f62c22b764",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check the response status",
                  "fullTitle": "Various tests Email verification Check the response status",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(check.body.payload.user.roles).to.include('verified');",
                  "err": {},
                  "uuid": "a12a0584-3f4f-4574-b574-239a18599433",
                  "parentUUID": "564e797e-37ec-46bc-912c-b0f62c22b764",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1b71ea46-123f-4961-89c0-34c743262210",
                "b925d3aa-8a1b-49e2-aaf8-c1a3b8f2435c",
                "a12a0584-3f4f-4574-b574-239a18599433"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9fcc674d-6be7-4863-99f3-a0026cce8c89",
              "title": "Get user by ID",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/various-tests.js",
              "file": "/tests/various-tests.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Get user by ID\"",
                  "fullTitle": "Various tests Get user by ID \"before all\" hook in \"Get user by ID\"",
                  "timedOut": false,
                  "duration": 459,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "2303ecef-e1dd-432f-aac6-16434b4a53b7",
                  "parentUUID": "9fcc674d-6be7-4863-99f3-a0026cce8c89",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response code is 200",
                  "fullTitle": "Various tests Get user by ID Response code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(getUser.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "eec4178d-f995-4a00-9b96-d615b59c624b",
                  "parentUUID": "9fcc674d-6be7-4863-99f3-a0026cce8c89",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body message returns a correct message",
                  "fullTitle": "Various tests Get user by ID Response body message returns a correct message",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(getUser.body.message).to.eq('User found');",
                  "err": {},
                  "uuid": "61a6e19f-ae1f-44a7-8dd3-6a2d0c55e68c",
                  "parentUUID": "9fcc674d-6be7-4863-99f3-a0026cce8c89",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "eec4178d-f995-4a00-9b96-d615b59c624b",
                "61a6e19f-ae1f-44a7-8dd3-6a2d0c55e68c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cdd90f9b-ff6e-4b9b-b1a6-78f3b634d887",
              "title": "Get all users",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/various-tests.js",
              "file": "/tests/various-tests.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Get all users\"",
                  "fullTitle": "Various tests Get all users \"before all\" hook in \"Get all users\"",
                  "timedOut": false,
                  "duration": 278,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "55a246fb-4b6d-4041-8862-56d025ea46f9",
                  "parentUUID": "cdd90f9b-ff6e-4b9b-b1a6-78f3b634d887",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response code is 200",
                  "fullTitle": "Various tests Get all users Response code is 200",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "8739ae5e-9efa-42df-b90d-5789f0694ac1",
                  "parentUUID": "cdd90f9b-ff6e-4b9b-b1a6-78f3b634d887",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body contains users array",
                  "fullTitle": "Various tests Get all users Response body contains users array",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body).to.be.an('object');",
                  "err": {},
                  "uuid": "f4172e70-b3d2-46b4-a874-95ad3c8cea26",
                  "parentUUID": "cdd90f9b-ff6e-4b9b-b1a6-78f3b634d887",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body does not show password",
                  "fullTitle": "Various tests Get all users Response body does not show password",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.items).to.be.an('array');",
                  "err": {},
                  "uuid": "e0471c86-0b83-47c2-9ae0-16a1da4192f4",
                  "parentUUID": "cdd90f9b-ff6e-4b9b-b1a6-78f3b634d887",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8739ae5e-9efa-42df-b90d-5789f0694ac1",
                "f4172e70-b3d2-46b4-a874-95ad3c8cea26",
                "e0471c86-0b83-47c2-9ae0-16a1da4192f4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "f217d4f4-a58b-4e51-a357-0edbe75fcc04",
              "title": "Space trimming",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/various-tests.js",
              "file": "/tests/various-tests.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Space trimming\"",
                  "fullTitle": "Various tests Space trimming \"before all\" hook in \"Space trimming\"",
                  "timedOut": false,
                  "duration": 803,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "ab0b3cea-2a35-4b25-a774-84966a32ced5",
                  "parentUUID": "f217d4f4-a58b-4e51-a357-0edbe75fcc04",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 200",
                  "fullTitle": "Various tests Space trimming Response status code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "892ef222-ada6-44ca-aee8-d6eae33e4b40",
                  "parentUUID": "f217d4f4-a58b-4e51-a357-0edbe75fcc04",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "892ef222-ada6-44ca-aee8-d6eae33e4b40"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "[status]_[datetime]-updatedReportNew",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "MyReportsNew",
        "reportFilename": "[status]_[datetime]-updatedReportNew"
      },
      "version": "6.2.0"
    }
  }
}