{
  "stats": {
    "suites": 45,
    "tests": 97,
    "passes": 97,
    "pending": 0,
    "failures": 0,
    "start": "2023-05-30T23:49:28.885Z",
    "end": "2023-05-30T23:49:59.007Z",
    "duration": 30122,
    "testsRegistered": 97,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5636acaf-bb82-44e3-9c38-ba86ca34d442",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 262,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
          "err": {},
          "uuid": "e224a690-c5db-48e5-bf00-4eebf4c6d0b1",
          "parentUUID": "5636acaf-bb82-44e3-9c38-ba86ca34d442",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after all\" hook: Delete all clients in \"{root}\"",
          "fullTitle": "\"after all\" hook: Delete all clients in \"{root}\"",
          "timedOut": false,
          "duration": 1663,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
          "err": {},
          "uuid": "283297dd-adeb-4a91-8f70-739f865e9520",
          "parentUUID": "5636acaf-bb82-44e3-9c38-ba86ca34d442",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"after all\" hook: Delete all the services in \"{root}\"",
          "fullTitle": "\"after all\" hook: Delete all the services in \"{root}\"",
          "timedOut": false,
          "duration": 1353,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
          "err": {},
          "uuid": "18fe7a03-fe55-48c3-b98e-5519e26e5534",
          "parentUUID": "5636acaf-bb82-44e3-9c38-ba86ca34d442",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"after all\" hook: Delete all vendors in \"{root}\"",
          "fullTitle": "\"after all\" hook: Delete all vendors in \"{root}\"",
          "timedOut": false,
          "duration": 4668,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
          "err": {},
          "uuid": "004ca165-69c2-422b-9b81-f0f17fe20a67",
          "parentUUID": "5636acaf-bb82-44e3-9c38-ba86ca34d442",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "0f2ba1be-77f9-483c-b79d-caad53efd18e",
          "title": "Autorization test",
          "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/auth.spec.js",
          "file": "/tests/auth.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "c5b3b8f5-5c0a-4ccf-b57b-18c946e5ac0f",
              "title": "Autorization with valid data",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/auth.spec.js",
              "file": "/tests/auth.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Autorization with valid data\"",
                  "fullTitle": "Autorization test Autorization with valid data \"before all\" hook in \"Autorization with valid data\"",
                  "timedOut": false,
                  "duration": 230,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "f4d67603-faaa-4274-8d8a-6b4a7fbd9e77",
                  "parentUUID": "c5b3b8f5-5c0a-4ccf-b57b-18c946e5ac0f",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 200",
                  "fullTitle": "Autorization test Autorization with valid data Response status code is 200",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "3b0876b8-f6e2-4609-818e-11a0633d4d7e",
                  "parentUUID": "c5b3b8f5-5c0a-4ccf-b57b-18c946e5ac0f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Autorization test Autorization with valid data Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "fd03d1f1-2887-47f4-a9a4-ab89ed200d0b",
                  "parentUUID": "c5b3b8f5-5c0a-4ccf-b57b-18c946e5ac0f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check the response has token",
                  "fullTitle": "Autorization test Autorization with valid data Check the response has token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "2412b6c5-a648-4830-be42-ca1a0c5a62c8",
                  "parentUUID": "c5b3b8f5-5c0a-4ccf-b57b-18c946e5ac0f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body does not show password",
                  "fullTitle": "Autorization test Autorization with valid data Response body does not show password",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "5758ec2e-6177-41c8-8232-817095c9fa43",
                  "parentUUID": "c5b3b8f5-5c0a-4ccf-b57b-18c946e5ac0f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3b0876b8-f6e2-4609-818e-11a0633d4d7e",
                "fd03d1f1-2887-47f4-a9a4-ab89ed200d0b",
                "2412b6c5-a648-4830-be42-ca1a0c5a62c8",
                "5758ec2e-6177-41c8-8232-817095c9fa43"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "dd0e1ea1-b27c-446a-b93a-ea147f5bd49b",
              "title": "Autorization with invalid data",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/auth.spec.js",
              "file": "/tests/auth.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Autorization with invalid data\"",
                  "fullTitle": "Autorization test Autorization with invalid data \"before all\" hook in \"Autorization with invalid data\"",
                  "timedOut": false,
                  "duration": 1153,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "7cf144b6-746f-41aa-a31e-ddaf7711c9ad",
                  "parentUUID": "dd0e1ea1-b27c-446a-b93a-ea147f5bd49b",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 400",
                  "fullTitle": "Autorization test Autorization with invalid data Response status code is 400",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "881186cb-18b2-438f-94d6-75687dd15dc0",
                  "parentUUID": "dd0e1ea1-b27c-446a-b93a-ea147f5bd49b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Autorization test Autorization with invalid data Response body returns correct message",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "23bf591d-a11f-4841-a464-5e300e60fffb",
                  "parentUUID": "dd0e1ea1-b27c-446a-b93a-ea147f5bd49b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "881186cb-18b2-438f-94d6-75687dd15dc0",
                "23bf591d-a11f-4841-a464-5e300e60fffb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d52daf4d-e5f8-4dfe-9ae4-1495113c310e",
              "title": "Autorization with empty data",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/auth.spec.js",
              "file": "/tests/auth.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Autorization with empty data\"",
                  "fullTitle": "Autorization test Autorization with empty data \"before all\" hook in \"Autorization with empty data\"",
                  "timedOut": false,
                  "duration": 168,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "ea2f78f3-c52c-4632-b650-3bfece7acc00",
                  "parentUUID": "d52daf4d-e5f8-4dfe-9ae4-1495113c310e",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 400",
                  "fullTitle": "Autorization test Autorization with empty data Response status code is 400",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "a4cabe6b-9e94-4df8-949b-5e9b9481ec2a",
                  "parentUUID": "d52daf4d-e5f8-4dfe-9ae4-1495113c310e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Autorization test Autorization with empty data Response body returns correct message",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "1bbcdf15-f55b-4cd0-913e-0c3c724cb1dc",
                  "parentUUID": "d52daf4d-e5f8-4dfe-9ae4-1495113c310e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a4cabe6b-9e94-4df8-949b-5e9b9481ec2a",
                "1bbcdf15-f55b-4cd0-913e-0c3c724cb1dc"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4b261689-4004-4755-87e4-5b82ad8f92bd",
              "title": "Check if the email was trimmed",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/auth.spec.js",
              "file": "/tests/auth.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Check if the email was trimmed\"",
                  "fullTitle": "Autorization test Check if the email was trimmed \"before all\" hook in \"Check if the email was trimmed\"",
                  "timedOut": false,
                  "duration": 226,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "02ee06c1-53cf-4a8b-8007-b491299da143",
                  "parentUUID": "4b261689-4004-4755-87e4-5b82ad8f92bd",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 200",
                  "fullTitle": "Autorization test Check if the email was trimmed Response status code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "a478985f-b274-45dc-9c4b-ce13003ae452",
                  "parentUUID": "4b261689-4004-4755-87e4-5b82ad8f92bd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body message returns a correct message",
                  "fullTitle": "Autorization test Check if the email was trimmed Response body message returns a correct message",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "bdfe7ded-3008-44d2-9838-d647fecb20c0",
                  "parentUUID": "4b261689-4004-4755-87e4-5b82ad8f92bd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a478985f-b274-45dc-9c4b-ce13003ae452",
                "bdfe7ded-3008-44d2-9838-d647fecb20c0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c6391e09-572e-428a-9392-1c42733b8d91",
          "title": "Clients tests",
          "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/client.spec.js",
          "file": "/tests/client.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "4fda18f7-1cd8-44d2-b310-f1417b51b451",
              "title": "Client create",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/client.spec.js",
              "file": "/tests/client.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Client create\"",
                  "fullTitle": "Clients tests Client create \"before all\" hook in \"Client create\"",
                  "timedOut": false,
                  "duration": 205,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "2576555a-7e5d-402d-82e2-9a1e2de2f2f8",
                  "parentUUID": "4fda18f7-1cd8-44d2-b310-f1417b51b451",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response code is 200",
                  "fullTitle": "Clients tests Client create Response code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "a7cf0272-f68a-436e-9055-bb8be97cf90a",
                  "parentUUID": "4fda18f7-1cd8-44d2-b310-f1417b51b451",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body message returns is correct",
                  "fullTitle": "Clients tests Client create Response body message returns is correct",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('Client created');",
                  "err": {},
                  "uuid": "96ebed90-4dad-4387-ab20-f95200e422e7",
                  "parentUUID": "4fda18f7-1cd8-44d2-b310-f1417b51b451",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns success is true",
                  "fullTitle": "Clients tests Client create Response body returns success is true",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body).to.have.property('success', true);",
                  "err": {},
                  "uuid": "efcd53ee-2f0c-4bef-bb6e-4cd6bb67f1b6",
                  "parentUUID": "4fda18f7-1cd8-44d2-b310-f1417b51b451",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a7cf0272-f68a-436e-9055-bb8be97cf90a",
                "96ebed90-4dad-4387-ab20-f95200e422e7",
                "efcd53ee-2f0c-4bef-bb6e-4cd6bb67f1b6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "ad59c3f5-e4d6-4f0e-91c8-49457840f374",
              "title": "Get all clients",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/client.spec.js",
              "file": "/tests/client.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Get all clients\"",
                  "fullTitle": "Clients tests Get all clients \"before all\" hook in \"Get all clients\"",
                  "timedOut": false,
                  "duration": 223,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "e1c752ff-7f32-4c06-bc12-d3648b9bbbea",
                  "parentUUID": "ad59c3f5-e4d6-4f0e-91c8-49457840f374",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response code is 200",
                  "fullTitle": "Clients tests Get all clients Response code is 200",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "2cdb02da-f7f2-4467-b0ae-83b34173b2d7",
                  "parentUUID": "ad59c3f5-e4d6-4f0e-91c8-49457840f374",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body message returns is correct",
                  "fullTitle": "Clients tests Get all clients Response body message returns is correct",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('ClientSearch ok');",
                  "err": {},
                  "uuid": "40dd9113-2ae5-4f82-a820-082c60807487",
                  "parentUUID": "ad59c3f5-e4d6-4f0e-91c8-49457840f374",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body contains users array",
                  "fullTitle": "Clients tests Get all clients Response body contains users array",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.payload.items).to.be.an('array');",
                  "err": {},
                  "uuid": "733af4b2-2912-4450-8602-ea38ddfde320",
                  "parentUUID": "ad59c3f5-e4d6-4f0e-91c8-49457840f374",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2cdb02da-f7f2-4467-b0ae-83b34173b2d7",
                "40dd9113-2ae5-4f82-a820-082c60807487",
                "733af4b2-2912-4450-8602-ea38ddfde320"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "d130ecb9-efe0-4831-9e6f-96affb35f36d",
              "title": "Get client by ID",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/client.spec.js",
              "file": "/tests/client.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Get client by ID\"",
                  "fullTitle": "Clients tests Get client by ID \"before all\" hook in \"Get client by ID\"",
                  "timedOut": false,
                  "duration": 515,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "88243365-d57d-48a6-a4e0-68821507be6f",
                  "parentUUID": "d130ecb9-efe0-4831-9e6f-96affb35f36d",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 200",
                  "fullTitle": "Clients tests Get client by ID Response status code is 200",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "4bf693c8-2045-42d6-818e-e1c8b508a4bc",
                  "parentUUID": "d130ecb9-efe0-4831-9e6f-96affb35f36d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Clients tests Get client by ID Response body returns correct message",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('Get Client by id ok');",
                  "err": {},
                  "uuid": "cdd050fa-157b-4bf5-8570-0923b1c54956",
                  "parentUUID": "d130ecb9-efe0-4831-9e6f-96affb35f36d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check if the response returns right Id",
                  "fullTitle": "Clients tests Get client by ID Check if the response returns right Id",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.payload._id).to.eq(\"\".concat(clientId));",
                  "err": {},
                  "uuid": "6ff67ca0-7f5c-4095-9384-8c367316a9d0",
                  "parentUUID": "d130ecb9-efe0-4831-9e6f-96affb35f36d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "4bf693c8-2045-42d6-818e-e1c8b508a4bc",
                "cdd050fa-157b-4bf5-8570-0923b1c54956",
                "6ff67ca0-7f5c-4095-9384-8c367316a9d0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9e4fa112-ae47-465b-b7e9-ef9b4fab8c77",
              "title": "Get the client by name",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/client.spec.js",
              "file": "/tests/client.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Get the client by name\"",
                  "fullTitle": "Clients tests Get the client by name \"before all\" hook in \"Get the client by name\"",
                  "timedOut": false,
                  "duration": 725,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "2990eb94-b82b-4d2c-ac8a-24765df61bb1",
                  "parentUUID": "9e4fa112-ae47-465b-b7e9-ef9b4fab8c77",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 200",
                  "fullTitle": "Clients tests Get the client by name Response status code is 200",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "e3eca64e-45bf-4df6-84c6-f59a0336218f",
                  "parentUUID": "9e4fa112-ae47-465b-b7e9-ef9b4fab8c77",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Clients tests Get the client by name Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('ClientSearch ok');",
                  "err": {},
                  "uuid": "97f417ef-b461-4a65-a82e-c35f9e88bafd",
                  "parentUUID": "9e4fa112-ae47-465b-b7e9-ef9b4fab8c77",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response returns 1 client",
                  "fullTitle": "Clients tests Get the client by name Response returns 1 client",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.payload.items).to.be.an('array').to.have.lengthOf.above(0);",
                  "err": {},
                  "uuid": "476c6868-616b-4cb8-b7b2-b252a6ff737e",
                  "parentUUID": "9e4fa112-ae47-465b-b7e9-ef9b4fab8c77",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check if the client name is right",
                  "fullTitle": "Clients tests Get the client by name Check if the client name is right",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.payload.items[0].name).to.eq(clientName);",
                  "err": {},
                  "uuid": "8fd78a78-bed8-4dd7-876a-da9058feb8c0",
                  "parentUUID": "9e4fa112-ae47-465b-b7e9-ef9b4fab8c77",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e3eca64e-45bf-4df6-84c6-f59a0336218f",
                "97f417ef-b461-4a65-a82e-c35f9e88bafd",
                "476c6868-616b-4cb8-b7b2-b252a6ff737e",
                "8fd78a78-bed8-4dd7-876a-da9058feb8c0"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7f6f67ed-ee68-4f5c-a436-e5b4698bf99c",
              "title": "Check if the name was actually updated",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/client.spec.js",
              "file": "/tests/client.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Check if the name was actually updated\"",
                  "fullTitle": "Clients tests Check if the name was actually updated \"before all\" hook in \"Check if the name was actually updated\"",
                  "timedOut": false,
                  "duration": 981,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "9e6a94de-8a97-40b5-afd4-88a904b63e42",
                  "parentUUID": "7f6f67ed-ee68-4f5c-a436-e5b4698bf99c",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 200",
                  "fullTitle": "Clients tests Check if the name was actually updated Response status code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "c3e5f502-5e6e-46d6-af12-16fcb7241ef2",
                  "parentUUID": "7f6f67ed-ee68-4f5c-a436-e5b4698bf99c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Clients tests Check if the name was actually updated Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('Client updated');",
                  "err": {},
                  "uuid": "fb3d3470-2c77-48cb-9470-9910784e4836",
                  "parentUUID": "7f6f67ed-ee68-4f5c-a436-e5b4698bf99c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check if the client name was updated",
                  "fullTitle": "Clients tests Check if the name was actually updated Check if the client name was updated",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(beforeName).not.to.eq(afterName);",
                  "err": {},
                  "uuid": "5e8d16c8-0fce-4b22-91b2-cb0651c037ed",
                  "parentUUID": "7f6f67ed-ee68-4f5c-a436-e5b4698bf99c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c3e5f502-5e6e-46d6-af12-16fcb7241ef2",
                "fb3d3470-2c77-48cb-9470-9910784e4836",
                "5e8d16c8-0fce-4b22-91b2-cb0651c037ed"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "be354bd7-0457-4bb9-be57-ae91c3c94fb8",
              "title": "Update client",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/client.spec.js",
              "file": "/tests/client.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Update client\"",
                  "fullTitle": "Clients tests Update client \"before all\" hook in \"Update client\"",
                  "timedOut": false,
                  "duration": 423,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "0ec69925-bdb3-4868-a29b-20245c90dd9e",
                  "parentUUID": "be354bd7-0457-4bb9-be57-ae91c3c94fb8",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 200",
                  "fullTitle": "Clients tests Update client Response status code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "22c0299b-c548-4a1b-8bba-adda3df772cd",
                  "parentUUID": "be354bd7-0457-4bb9-be57-ae91c3c94fb8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Clients tests Update client Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('Client updated');",
                  "err": {},
                  "uuid": "e16302e7-0010-47ef-a2e0-30b672321a02",
                  "parentUUID": "be354bd7-0457-4bb9-be57-ae91c3c94fb8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "22c0299b-c548-4a1b-8bba-adda3df772cd",
                "e16302e7-0010-47ef-a2e0-30b672321a02"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "fd8393c8-0894-43e1-9f05-27b3ec8ca225",
              "title": "Delete the client",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/client.spec.js",
              "file": "/tests/client.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Delete the client\"",
                  "fullTitle": "Clients tests Delete the client \"before all\" hook in \"Delete the client\"",
                  "timedOut": false,
                  "duration": 459,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "02b1c69f-955f-44d1-9598-ebc623715598",
                  "parentUUID": "fd8393c8-0894-43e1-9f05-27b3ec8ca225",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 200",
                  "fullTitle": "Clients tests Delete the client Response status code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "d35f0183-2f12-4356-bee0-7545ab125d93",
                  "parentUUID": "fd8393c8-0894-43e1-9f05-27b3ec8ca225",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Clients tests Delete the client Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('Client deleted');",
                  "err": {},
                  "uuid": "11714e21-b394-4652-9149-7168d316960c",
                  "parentUUID": "fd8393c8-0894-43e1-9f05-27b3ec8ca225",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d35f0183-2f12-4356-bee0-7545ab125d93",
                "11714e21-b394-4652-9149-7168d316960c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1d3fb6c6-2a3f-4292-8246-05d743df6ae3",
              "title": "Check if the client actually deleted",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/client.spec.js",
              "file": "/tests/client.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Check if the client actually deleted\"",
                  "fullTitle": "Clients tests Check if the client actually deleted \"before all\" hook in \"Check if the client actually deleted\"",
                  "timedOut": false,
                  "duration": 739,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "2f33ed51-6c8e-4675-894f-bc1d84cd9547",
                  "parentUUID": "1d3fb6c6-2a3f-4292-8246-05d743df6ae3",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 404",
                  "fullTitle": "Clients tests Check if the client actually deleted Response status code is 404",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(404);",
                  "err": {},
                  "uuid": "d1f6b614-abed-4efa-b9cd-82bd78688481",
                  "parentUUID": "1d3fb6c6-2a3f-4292-8246-05d743df6ae3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Clients tests Check if the client actually deleted Response body returns correct message",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('No client for provided id');",
                  "err": {},
                  "uuid": "c6e73978-4773-40f3-bd87-802e97315a1b",
                  "parentUUID": "1d3fb6c6-2a3f-4292-8246-05d743df6ae3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d1f6b614-abed-4efa-b9cd-82bd78688481",
                "c6e73978-4773-40f3-bd87-802e97315a1b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5541f144-aa40-4130-834a-31086f29e478",
          "title": "Registration test",
          "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/registration.spec.js",
          "file": "/tests/registration.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "80d853fb-d99b-4dce-8b66-99ccf354249f",
              "title": "Register/create news user with valid credentials",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/registration.spec.js",
              "file": "/tests/registration.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Register/create news user with valid credentials\"",
                  "fullTitle": "Registration test Register/create news user with valid credentials \"before all\" hook in \"Register/create news user with valid credentials\"",
                  "timedOut": false,
                  "duration": 793,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "c9203651-3174-460c-a918-265999aa9ccf",
                  "parentUUID": "80d853fb-d99b-4dce-8b66-99ccf354249f",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 201",
                  "fullTitle": "Registration test Register/create news user with valid credentials Response status code is 201",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(201);",
                  "err": {},
                  "uuid": "97e0a764-f210-4e2e-9a06-2a48cbe6f7c7",
                  "parentUUID": "80d853fb-d99b-4dce-8b66-99ccf354249f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Registration test Register/create news user with valid credentials Response body returns correct message",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('User created successfully. Please check your email and verify it');",
                  "err": {},
                  "uuid": "bc10278f-5436-4eb7-9b43-70df897f203c",
                  "parentUUID": "80d853fb-d99b-4dce-8b66-99ccf354249f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "97e0a764-f210-4e2e-9a06-2a48cbe6f7c7",
                "bc10278f-5436-4eb7-9b43-70df897f203c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "a103141a-462e-473f-9926-e38b81f4c127",
              "title": "Register/create new user without companyName",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/registration.spec.js",
              "file": "/tests/registration.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Register/create new user without companyName\"",
                  "fullTitle": "Registration test Register/create new user without companyName \"before all\" hook in \"Register/create new user without companyName\"",
                  "timedOut": false,
                  "duration": 473,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "3055e3b9-17a6-4833-89f3-42e77cac42ef",
                  "parentUUID": "a103141a-462e-473f-9926-e38b81f4c127",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 201",
                  "fullTitle": "Registration test Register/create new user without companyName Response status code is 201",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(201);",
                  "err": {},
                  "uuid": "39f71de7-bff6-4380-8634-fe9a0d2265a7",
                  "parentUUID": "a103141a-462e-473f-9926-e38b81f4c127",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Registration test Register/create new user without companyName Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('User created successfully. Please check your email and verify it');",
                  "err": {},
                  "uuid": "9496a474-93b5-40d4-9f2e-e32d6eef9a60",
                  "parentUUID": "a103141a-462e-473f-9926-e38b81f4c127",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "39f71de7-bff6-4380-8634-fe9a0d2265a7",
                "9496a474-93b5-40d4-9f2e-e32d6eef9a60"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1b4c8b94-2e0e-49ac-b553-73d20eeb4b82",
              "title": "Register/create new user without firstName",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/registration.spec.js",
              "file": "/tests/registration.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Register/create new user without firstName\"",
                  "fullTitle": "Registration test Register/create new user without firstName \"before all\" hook in \"Register/create new user without firstName\"",
                  "timedOut": false,
                  "duration": 596,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "c185692c-974b-4a87-b4e8-44d2fe7a5d85",
                  "parentUUID": "1b4c8b94-2e0e-49ac-b553-73d20eeb4b82",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 404",
                  "fullTitle": "Registration test Register/create new user without firstName Response status code is 404",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(404);",
                  "err": {},
                  "uuid": "7b69079f-09ad-4229-978e-63dc2956edae",
                  "parentUUID": "1b4c8b94-2e0e-49ac-b553-73d20eeb4b82",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Registration test Register/create new user without firstName Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('User was not created');",
                  "err": {},
                  "uuid": "7a31636d-c281-4c6b-aa15-f806b0722371",
                  "parentUUID": "1b4c8b94-2e0e-49ac-b553-73d20eeb4b82",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7b69079f-09ad-4229-978e-63dc2956edae",
                "7a31636d-c281-4c6b-aa15-f806b0722371"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7234783d-5564-46fb-aa5e-f3d351848972",
              "title": "Register/create new user without lastName",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/registration.spec.js",
              "file": "/tests/registration.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Register/create new user without lastName\"",
                  "fullTitle": "Registration test Register/create new user without lastName \"before all\" hook in \"Register/create new user without lastName\"",
                  "timedOut": false,
                  "duration": 500,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "939f64d3-ea86-4907-8655-d27fed09b54c",
                  "parentUUID": "7234783d-5564-46fb-aa5e-f3d351848972",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 404",
                  "fullTitle": "Registration test Register/create new user without lastName Response status code is 404",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(404);",
                  "err": {},
                  "uuid": "3052abe2-cc88-413e-b15e-e520e754f86f",
                  "parentUUID": "7234783d-5564-46fb-aa5e-f3d351848972",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Registration test Register/create new user without lastName Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('User was not created');",
                  "err": {},
                  "uuid": "9e0fa6fc-01cd-4641-acbb-c89e9d97061e",
                  "parentUUID": "7234783d-5564-46fb-aa5e-f3d351848972",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3052abe2-cc88-413e-b15e-e520e754f86f",
                "9e0fa6fc-01cd-4641-acbb-c89e9d97061e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "71bd15e1-1018-468f-9127-cd55062bbc89",
              "title": "Register/create new user without email",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/registration.spec.js",
              "file": "/tests/registration.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Register/create new user without email\"",
                  "fullTitle": "Registration test Register/create new user without email \"before all\" hook in \"Register/create new user without email\"",
                  "timedOut": false,
                  "duration": 522,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "fa2995ce-252f-47ad-ae32-a7a95522cb03",
                  "parentUUID": "71bd15e1-1018-468f-9127-cd55062bbc89",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 404",
                  "fullTitle": "Registration test Register/create new user without email Response status code is 404",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(404);",
                  "err": {},
                  "uuid": "98bc9997-9fc8-47bb-a161-54bfd5df97b5",
                  "parentUUID": "71bd15e1-1018-468f-9127-cd55062bbc89",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Registration test Register/create new user without email Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('User was not created');",
                  "err": {},
                  "uuid": "00616988-b7b4-43be-82e9-03443c491324",
                  "parentUUID": "71bd15e1-1018-468f-9127-cd55062bbc89",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "98bc9997-9fc8-47bb-a161-54bfd5df97b5",
                "00616988-b7b4-43be-82e9-03443c491324"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "7c96251d-71e4-4f6b-b86d-4e3db60fdd9a",
              "title": "Register/create new user without password",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/registration.spec.js",
              "file": "/tests/registration.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Register/create new user without password\"",
                  "fullTitle": "Registration test Register/create new user without password \"before all\" hook in \"Register/create new user without password\"",
                  "timedOut": false,
                  "duration": 74,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "323eac62-53be-497e-991f-287b489afa2c",
                  "parentUUID": "7c96251d-71e4-4f6b-b86d-4e3db60fdd9a",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 400",
                  "fullTitle": "Registration test Register/create new user without password Response status code is 400",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(400);",
                  "err": {},
                  "uuid": "f117b7c0-25b5-4fc4-8d4e-5feed99cc97d",
                  "parentUUID": "7c96251d-71e4-4f6b-b86d-4e3db60fdd9a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Registration test Register/create new user without password Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('Wrong password format');",
                  "err": {},
                  "uuid": "1f7a0eaa-cdc8-4d44-82dd-45382ffd5434",
                  "parentUUID": "7c96251d-71e4-4f6b-b86d-4e3db60fdd9a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f117b7c0-25b5-4fc4-8d4e-5feed99cc97d",
                "1f7a0eaa-cdc8-4d44-82dd-45382ffd5434"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "c7520285-852a-404e-bd79-d1d885b4dfac",
              "title": "Create a user with existing email",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/registration.spec.js",
              "file": "/tests/registration.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Create a user with existing email\"",
                  "fullTitle": "Registration test Create a user with existing email \"before all\" hook in \"Create a user with existing email\"",
                  "timedOut": false,
                  "duration": 138,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "b1700cad-b11e-49a7-be09-99f9675875d3",
                  "parentUUID": "c7520285-852a-404e-bd79-d1d885b4dfac",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 409",
                  "fullTitle": "Registration test Create a user with existing email Response status code is 409",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(409);",
                  "err": {},
                  "uuid": "3fcc9773-9ec7-4759-b0e5-fa6164c10246",
                  "parentUUID": "c7520285-852a-404e-bd79-d1d885b4dfac",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Registration test Create a user with existing email Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('User with this e-mail exists');",
                  "err": {},
                  "uuid": "e3bd0632-0758-456e-bdce-d5e848e528ff",
                  "parentUUID": "c7520285-852a-404e-bd79-d1d885b4dfac",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3fcc9773-9ec7-4759-b0e5-fa6164c10246",
                "e3bd0632-0758-456e-bdce-d5e848e528ff"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "8357c2e6-0b58-4b2a-a343-f620b2c83252",
          "title": "Service tests",
          "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/service.spec.js",
          "file": "/tests/service.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "308ce935-48cc-4265-ab13-bdad021b9e62",
              "title": "Create service",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/service.spec.js",
              "file": "/tests/service.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Create service\"",
                  "fullTitle": "Service tests Create service \"before all\" hook in \"Create service\"",
                  "timedOut": false,
                  "duration": 422,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "8aa42647-805e-47f6-916d-219b43730155",
                  "parentUUID": "308ce935-48cc-4265-ab13-bdad021b9e62",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response code is 200",
                  "fullTitle": "Service tests Create service Response code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "f1d22225-169e-40b6-850e-538ff8d5c98e",
                  "parentUUID": "308ce935-48cc-4265-ab13-bdad021b9e62",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body message returns is correct",
                  "fullTitle": "Service tests Create service Response body message returns is correct",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('Service created');",
                  "err": {},
                  "uuid": "8be21549-a7b1-4f52-9efc-bab4a4a0178d",
                  "parentUUID": "308ce935-48cc-4265-ab13-bdad021b9e62",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f1d22225-169e-40b6-850e-538ff8d5c98e",
                "8be21549-a7b1-4f52-9efc-bab4a4a0178d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4fceae93-fd6b-411c-961b-00c0f29e26ad",
              "title": "Get all vendors",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/service.spec.js",
              "file": "/tests/service.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Get all vendors\"",
                  "fullTitle": "Service tests Get all vendors \"before all\" hook in \"Get all vendors\"",
                  "timedOut": false,
                  "duration": 277,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "1b989f7f-9be1-4ca5-83a7-5cb5a57b2d3b",
                  "parentUUID": "4fceae93-fd6b-411c-961b-00c0f29e26ad",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response code is 200",
                  "fullTitle": "Service tests Get all vendors Response code is 200",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "7d49a54d-066d-4556-b37d-ada4be54a764",
                  "parentUUID": "4fceae93-fd6b-411c-961b-00c0f29e26ad",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body message returns is correct",
                  "fullTitle": "Service tests Get all vendors Response body message returns is correct",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('Service Search ok');",
                  "err": {},
                  "uuid": "3b29228a-6879-44aa-bc26-7e09b7f42b31",
                  "parentUUID": "4fceae93-fd6b-411c-961b-00c0f29e26ad",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body contains users array",
                  "fullTitle": "Service tests Get all vendors Response body contains users array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.payload.items).to.be.an('array');",
                  "err": {},
                  "uuid": "f056a1da-a678-4758-94f7-e26accad1d78",
                  "parentUUID": "4fceae93-fd6b-411c-961b-00c0f29e26ad",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7d49a54d-066d-4556-b37d-ada4be54a764",
                "3b29228a-6879-44aa-bc26-7e09b7f42b31",
                "f056a1da-a678-4758-94f7-e26accad1d78"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "364e682e-22cd-4ad0-8ead-5a75d8318b87",
              "title": "Get service by Id",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/service.spec.js",
              "file": "/tests/service.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Get service by Id\"",
                  "fullTitle": "Service tests Get service by Id \"before all\" hook in \"Get service by Id\"",
                  "timedOut": false,
                  "duration": 977,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "7599439f-aba7-4f9a-a4cb-5b858cae5b65",
                  "parentUUID": "364e682e-22cd-4ad0-8ead-5a75d8318b87",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 200",
                  "fullTitle": "Service tests Get service by Id Response status code is 200",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "b1680eff-4493-499a-97b4-5aaaa3b1323e",
                  "parentUUID": "364e682e-22cd-4ad0-8ead-5a75d8318b87",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Service tests Get service by Id Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('Get Service by id ok');",
                  "err": {},
                  "uuid": "73a6502c-399b-4e37-8351-7359ebf1f2b2",
                  "parentUUID": "364e682e-22cd-4ad0-8ead-5a75d8318b87",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check if the response returns right Id",
                  "fullTitle": "Service tests Get service by Id Check if the response returns right Id",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.payload._id).to.eq(\"\".concat(serviceId));",
                  "err": {},
                  "uuid": "e620d1db-dcf4-4985-b7e1-ab80ada81f3d",
                  "parentUUID": "364e682e-22cd-4ad0-8ead-5a75d8318b87",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b1680eff-4493-499a-97b4-5aaaa3b1323e",
                "73a6502c-399b-4e37-8351-7359ebf1f2b2",
                "e620d1db-dcf4-4985-b7e1-ab80ada81f3d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "4a584367-5054-459e-b30c-ff8d9720228b",
              "title": "Get service by name",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/service.spec.js",
              "file": "/tests/service.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Get service by name\"",
                  "fullTitle": "Service tests Get service by name \"before all\" hook in \"Get service by name\"",
                  "timedOut": false,
                  "duration": 956,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "75a74084-6d37-4ed9-b14b-2494bf0e71c3",
                  "parentUUID": "4a584367-5054-459e-b30c-ff8d9720228b",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 200",
                  "fullTitle": "Service tests Get service by name Response status code is 200",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "217aa2fe-4294-4a03-bb9f-c0846833afdd",
                  "parentUUID": "4a584367-5054-459e-b30c-ff8d9720228b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Service tests Get service by name Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('Service Search ok');",
                  "err": {},
                  "uuid": "115f9bf1-7ea9-4379-a274-df0b2137b7f2",
                  "parentUUID": "4a584367-5054-459e-b30c-ff8d9720228b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response returns 1 client",
                  "fullTitle": "Service tests Get service by name Response returns 1 client",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.payload.items).to.be.an('array').to.have.lengthOf.above(0);",
                  "err": {},
                  "uuid": "dbfbf04c-b9b4-41d1-a246-9e7a07c4db72",
                  "parentUUID": "4a584367-5054-459e-b30c-ff8d9720228b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check if the client name is right",
                  "fullTitle": "Service tests Get service by name Check if the client name is right",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.payload.items[0].name).to.eq(serviceName);",
                  "err": {},
                  "uuid": "a14b12e2-1815-48b4-9044-82ac6b473802",
                  "parentUUID": "4a584367-5054-459e-b30c-ff8d9720228b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "217aa2fe-4294-4a03-bb9f-c0846833afdd",
                "115f9bf1-7ea9-4379-a274-df0b2137b7f2",
                "dbfbf04c-b9b4-41d1-a246-9e7a07c4db72",
                "a14b12e2-1815-48b4-9044-82ac6b473802"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "00b7e57e-9c54-4cce-8ebf-186facbdbf64",
              "title": "Update service",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/service.spec.js",
              "file": "/tests/service.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Update service\"",
                  "fullTitle": "Service tests Update service \"before all\" hook in \"Update service\"",
                  "timedOut": false,
                  "duration": 683,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "d58714a9-14db-4746-848a-4e7a53a727bb",
                  "parentUUID": "00b7e57e-9c54-4cce-8ebf-186facbdbf64",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 200",
                  "fullTitle": "Service tests Update service Response status code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "0765998f-3a66-46c1-9540-0e8b3088f925",
                  "parentUUID": "00b7e57e-9c54-4cce-8ebf-186facbdbf64",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Service tests Update service Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('Service updated');",
                  "err": {},
                  "uuid": "56f0a95e-dea3-41fb-8848-612533c9cb25",
                  "parentUUID": "00b7e57e-9c54-4cce-8ebf-186facbdbf64",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0765998f-3a66-46c1-9540-0e8b3088f925",
                "56f0a95e-dea3-41fb-8848-612533c9cb25"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "72e68714-7c50-4fe0-aa05-d0bed8311a75",
              "title": "Check if the service was actually updated",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/service.spec.js",
              "file": "/tests/service.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Check if the service was actually updated\"",
                  "fullTitle": "Service tests Check if the service was actually updated \"before all\" hook in \"Check if the service was actually updated\"",
                  "timedOut": false,
                  "duration": 1436,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "32a0762d-05b1-45b9-8533-77f690fa5750",
                  "parentUUID": "72e68714-7c50-4fe0-aa05-d0bed8311a75",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 200",
                  "fullTitle": "Service tests Check if the service was actually updated Response status code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "304a839d-20fd-4fb3-90bb-c918f2c3217d",
                  "parentUUID": "72e68714-7c50-4fe0-aa05-d0bed8311a75",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Service tests Check if the service was actually updated Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('Service updated');",
                  "err": {},
                  "uuid": "0d4a8c22-aefd-4a77-8a68-803ae4c67c7f",
                  "parentUUID": "72e68714-7c50-4fe0-aa05-d0bed8311a75",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check if the vendor name was updated",
                  "fullTitle": "Service tests Check if the service was actually updated Check if the vendor name was updated",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(beforeVendor).not.to.eq(afterVendor);",
                  "err": {},
                  "uuid": "038b59a0-5d92-42ef-9ed7-e4c5f779ea4b",
                  "parentUUID": "72e68714-7c50-4fe0-aa05-d0bed8311a75",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "304a839d-20fd-4fb3-90bb-c918f2c3217d",
                "0d4a8c22-aefd-4a77-8a68-803ae4c67c7f",
                "038b59a0-5d92-42ef-9ed7-e4c5f779ea4b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "fb6ec95c-94fe-4159-8aff-bdd43f67ae57",
              "title": "Delete service",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/service.spec.js",
              "file": "/tests/service.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Delete service\"",
                  "fullTitle": "Service tests Delete service \"before all\" hook in \"Delete service\"",
                  "timedOut": false,
                  "duration": 668,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "25af5bbc-4a5b-4792-865b-6c403f860c93",
                  "parentUUID": "fb6ec95c-94fe-4159-8aff-bdd43f67ae57",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 200",
                  "fullTitle": "Service tests Delete service Response status code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "a78f45d1-272b-4a9e-9992-f8ffaf9b4eb0",
                  "parentUUID": "fb6ec95c-94fe-4159-8aff-bdd43f67ae57",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Service tests Delete service Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('Service deleted');",
                  "err": {},
                  "uuid": "db82c4bd-2de2-4bfd-b335-89e1c7d74011",
                  "parentUUID": "fb6ec95c-94fe-4159-8aff-bdd43f67ae57",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a78f45d1-272b-4a9e-9992-f8ffaf9b4eb0",
                "db82c4bd-2de2-4bfd-b335-89e1c7d74011"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "cf650a21-10e8-49a5-9d6f-a87982278734",
              "title": "Check if the service was actually deleted",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/service.spec.js",
              "file": "/tests/service.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Check if the service was actually deleted\"",
                  "fullTitle": "Service tests Check if the service was actually deleted \"before all\" hook in \"Check if the service was actually deleted\"",
                  "timedOut": false,
                  "duration": 859,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "7a4772bf-2c8e-45d2-b5af-4eaf1f62f20e",
                  "parentUUID": "cf650a21-10e8-49a5-9d6f-a87982278734",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 404",
                  "fullTitle": "Service tests Check if the service was actually deleted Response status code is 404",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(404);",
                  "err": {},
                  "uuid": "d851bd1f-bab5-4d6e-91da-696123902f0a",
                  "parentUUID": "cf650a21-10e8-49a5-9d6f-a87982278734",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Service tests Check if the service was actually deleted Response body returns correct message",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('No service for provided id');",
                  "err": {},
                  "uuid": "82481f02-be45-4b8a-ae39-3add952c92eb",
                  "parentUUID": "cf650a21-10e8-49a5-9d6f-a87982278734",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d851bd1f-bab5-4d6e-91da-696123902f0a",
                "82481f02-be45-4b8a-ae39-3add952c92eb"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "10f57373-d7aa-41a3-bd63-17ef8a5c7c25",
          "title": "Various tests",
          "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/various-tests.js",
          "file": "/tests/various-tests.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "4a418d42-e510-4911-ba4d-69336e8baca2",
              "title": "Email verification",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/various-tests.js",
              "file": "/tests/various-tests.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Email verification\"",
                  "fullTitle": "Various tests Email verification \"before all\" hook in \"Email verification\"",
                  "timedOut": false,
                  "duration": 1264,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "7cc09a51-885d-4b4b-adb1-8177833991a7",
                  "parentUUID": "4a418d42-e510-4911-ba4d-69336e8baca2",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Check the response status",
                  "fullTitle": "Various tests Email verification Check the response status",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(res.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "699161a2-8b16-44f8-9a5c-7c479eb84ec9",
                  "parentUUID": "4a418d42-e510-4911-ba4d-69336e8baca2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check the response message",
                  "fullTitle": "Various tests Email verification Check the response message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(res.body.message).to.include('confirmed');",
                  "err": {},
                  "uuid": "e11d5b98-27f5-41bf-acb3-8045e1e9cb35",
                  "parentUUID": "4a418d42-e510-4911-ba4d-69336e8baca2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check the response status",
                  "fullTitle": "Various tests Email verification Check the response status",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(check.body.payload.user.roles).to.include('verified');",
                  "err": {},
                  "uuid": "91922e30-1aa0-41a6-a590-4eff45af8d9c",
                  "parentUUID": "4a418d42-e510-4911-ba4d-69336e8baca2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "699161a2-8b16-44f8-9a5c-7c479eb84ec9",
                "e11d5b98-27f5-41bf-acb3-8045e1e9cb35",
                "91922e30-1aa0-41a6-a590-4eff45af8d9c"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "681471f7-4a02-4316-b113-d2df569ba7fa",
              "title": "Get user by ID",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/various-tests.js",
              "file": "/tests/various-tests.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Get user by ID\"",
                  "fullTitle": "Various tests Get user by ID \"before all\" hook in \"Get user by ID\"",
                  "timedOut": false,
                  "duration": 471,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "ba982b16-e6fc-4ee2-964b-2da8a228125d",
                  "parentUUID": "681471f7-4a02-4316-b113-d2df569ba7fa",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response code is 200",
                  "fullTitle": "Various tests Get user by ID Response code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(getUser.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "3eefcb0f-d158-43bd-8849-b30fc7f5e56b",
                  "parentUUID": "681471f7-4a02-4316-b113-d2df569ba7fa",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body message returns a correct message",
                  "fullTitle": "Various tests Get user by ID Response body message returns a correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(getUser.body.message).to.eq('User found');",
                  "err": {},
                  "uuid": "5e193c0c-e803-47a7-bf3e-757840743d7f",
                  "parentUUID": "681471f7-4a02-4316-b113-d2df569ba7fa",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3eefcb0f-d158-43bd-8849-b30fc7f5e56b",
                "5e193c0c-e803-47a7-bf3e-757840743d7f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5d8da68f-27b5-4b2c-afbc-b5900c9157d3",
              "title": "Get all users",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/various-tests.js",
              "file": "/tests/various-tests.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Get all users\"",
                  "fullTitle": "Various tests Get all users \"before all\" hook in \"Get all users\"",
                  "timedOut": false,
                  "duration": 295,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "87ae67f6-afcf-4773-8788-8cc531280717",
                  "parentUUID": "5d8da68f-27b5-4b2c-afbc-b5900c9157d3",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response code is 200",
                  "fullTitle": "Various tests Get all users Response code is 200",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "08c78115-41c7-4d03-a49b-d9412df4d252",
                  "parentUUID": "5d8da68f-27b5-4b2c-afbc-b5900c9157d3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body contains users array",
                  "fullTitle": "Various tests Get all users Response body contains users array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body).to.be.an('object');",
                  "err": {},
                  "uuid": "602ec469-0d6a-4fb7-9900-fa228a679282",
                  "parentUUID": "5d8da68f-27b5-4b2c-afbc-b5900c9157d3",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body does not show password",
                  "fullTitle": "Various tests Get all users Response body does not show password",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.items).to.be.an('array');",
                  "err": {},
                  "uuid": "fa8935bd-42d4-4aef-9636-4bfdfb832ddf",
                  "parentUUID": "5d8da68f-27b5-4b2c-afbc-b5900c9157d3",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "08c78115-41c7-4d03-a49b-d9412df4d252",
                "602ec469-0d6a-4fb7-9900-fa228a679282",
                "fa8935bd-42d4-4aef-9636-4bfdfb832ddf"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "fb2d1507-7306-4a94-b7b5-1bdf554378ea",
              "title": "Space trimming",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/various-tests.js",
              "file": "/tests/various-tests.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Space trimming\"",
                  "fullTitle": "Various tests Space trimming \"before all\" hook in \"Space trimming\"",
                  "timedOut": false,
                  "duration": 371,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "7e81266a-2e95-474d-a60b-1f19f218e005",
                  "parentUUID": "fb2d1507-7306-4a94-b7b5-1bdf554378ea",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 200",
                  "fullTitle": "Various tests Space trimming Response status code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "2ac70486-830d-48a0-9d06-c9fe86603e94",
                  "parentUUID": "fb2d1507-7306-4a94-b7b5-1bdf554378ea",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2ac70486-830d-48a0-9d06-c9fe86603e94"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "5bae8357-bf18-427d-b53c-00595464f620",
          "title": "Vendor tests",
          "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/vendor.spec.js",
          "file": "/tests/vendor.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "efc85568-8aea-4571-bfb9-c8355f019b7a",
              "title": "Create vendor",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/vendor.spec.js",
              "file": "/tests/vendor.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Create vendor\"",
                  "fullTitle": "Vendor tests Create vendor \"before all\" hook in \"Create vendor\"",
                  "timedOut": false,
                  "duration": 239,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "f991e2d1-04d7-466c-81d1-42134c7c7ae9",
                  "parentUUID": "efc85568-8aea-4571-bfb9-c8355f019b7a",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response code is 200",
                  "fullTitle": "Vendor tests Create vendor Response code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "2813dae2-3ddd-41cc-90b0-93742ceff525",
                  "parentUUID": "efc85568-8aea-4571-bfb9-c8355f019b7a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response message is correct",
                  "fullTitle": "Vendor tests Create vendor Response message is correct",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('Vendor created');",
                  "err": {},
                  "uuid": "94afa394-bfb4-42f4-886c-f306c066f0ff",
                  "parentUUID": "efc85568-8aea-4571-bfb9-c8355f019b7a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2813dae2-3ddd-41cc-90b0-93742ceff525",
                "94afa394-bfb4-42f4-886c-f306c066f0ff"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "04baf1f6-36ce-4d47-8b24-6e172e4bbd4b",
              "title": "Get all vendors",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/vendor.spec.js",
              "file": "/tests/vendor.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Get all vendors\"",
                  "fullTitle": "Vendor tests Get all vendors \"before all\" hook in \"Get all vendors\"",
                  "timedOut": false,
                  "duration": 237,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "bf48079b-b4be-4c1e-91f3-31a5c1dd2d54",
                  "parentUUID": "04baf1f6-36ce-4d47-8b24-6e172e4bbd4b",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response code is 200",
                  "fullTitle": "Vendor tests Get all vendors Response code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "6afbd9ee-0b6a-4095-860d-94320c156baa",
                  "parentUUID": "04baf1f6-36ce-4d47-8b24-6e172e4bbd4b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body message returns is correct",
                  "fullTitle": "Vendor tests Get all vendors Response body message returns is correct",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('VendorSearch ok');",
                  "err": {},
                  "uuid": "cfba9974-ec35-4932-9095-dd6f916a54b3",
                  "parentUUID": "04baf1f6-36ce-4d47-8b24-6e172e4bbd4b",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body contains users array",
                  "fullTitle": "Vendor tests Get all vendors Response body contains users array",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.payload.items).to.be.an('array');",
                  "err": {},
                  "uuid": "388150ae-b15c-4515-adc2-2eecbb14aa35",
                  "parentUUID": "04baf1f6-36ce-4d47-8b24-6e172e4bbd4b",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6afbd9ee-0b6a-4095-860d-94320c156baa",
                "cfba9974-ec35-4932-9095-dd6f916a54b3",
                "388150ae-b15c-4515-adc2-2eecbb14aa35"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 2,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "5cbc406d-52b4-4d1d-926b-c28df8806f54",
              "title": "Get vendor by ID",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/vendor.spec.js",
              "file": "/tests/vendor.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Get vendor by ID\"",
                  "fullTitle": "Vendor tests Get vendor by ID \"before all\" hook in \"Get vendor by ID\"",
                  "timedOut": false,
                  "duration": 479,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "f79af7cd-c524-4dcb-9530-7a946f76c48a",
                  "parentUUID": "5cbc406d-52b4-4d1d-926b-c28df8806f54",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 200",
                  "fullTitle": "Vendor tests Get vendor by ID Response status code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "ed1b3096-f8e3-4194-bece-b77c4cd15352",
                  "parentUUID": "5cbc406d-52b4-4d1d-926b-c28df8806f54",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Vendor tests Get vendor by ID Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('Get Vendor by id ok');",
                  "err": {},
                  "uuid": "06ddae22-05b1-4f8b-9b63-aada26aaf869",
                  "parentUUID": "5cbc406d-52b4-4d1d-926b-c28df8806f54",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check if the response returns right Id",
                  "fullTitle": "Vendor tests Get vendor by ID Check if the response returns right Id",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.payload._id).to.eq(\"\".concat(vendorId));",
                  "err": {},
                  "uuid": "128d8f86-fa7d-4502-8996-a59626c43a10",
                  "parentUUID": "5cbc406d-52b4-4d1d-926b-c28df8806f54",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ed1b3096-f8e3-4194-bece-b77c4cd15352",
                "06ddae22-05b1-4f8b-9b63-aada26aaf869",
                "128d8f86-fa7d-4502-8996-a59626c43a10"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "1b27830a-a516-46ee-aae0-083a23a645f5",
              "title": "Get the vendor by name",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/vendor.spec.js",
              "file": "/tests/vendor.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Get the vendor by name\"",
                  "fullTitle": "Vendor tests Get the vendor by name \"before all\" hook in \"Get the vendor by name\"",
                  "timedOut": false,
                  "duration": 684,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "44ec2307-a209-4b02-9bb0-3e478e30ca6a",
                  "parentUUID": "1b27830a-a516-46ee-aae0-083a23a645f5",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Responses status code is 200",
                  "fullTitle": "Vendor tests Get the vendor by name Responses status code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "29a657fc-7452-4c96-aca9-0807d928759c",
                  "parentUUID": "1b27830a-a516-46ee-aae0-083a23a645f5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Responses body returns correct message",
                  "fullTitle": "Vendor tests Get the vendor by name Responses body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('VendorSearch ok');",
                  "err": {},
                  "uuid": "50e48e16-8812-459f-b2a5-7b1efa93d506",
                  "parentUUID": "1b27830a-a516-46ee-aae0-083a23a645f5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Responses returns 1 vendor",
                  "fullTitle": "Vendor tests Get the vendor by name Responses returns 1 vendor",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.payload.items).to.be.an('array').to.have.lengthOf.above(0);",
                  "err": {},
                  "uuid": "bcf69382-bbca-49b1-85ca-9f8dc98cd537",
                  "parentUUID": "1b27830a-a516-46ee-aae0-083a23a645f5",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check if the client name is right",
                  "fullTitle": "Vendor tests Get the vendor by name Check if the client name is right",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.payload.items[0].name).to.eq(vendorName);",
                  "err": {},
                  "uuid": "100527c2-d138-4d73-b512-176859dd9898",
                  "parentUUID": "1b27830a-a516-46ee-aae0-083a23a645f5",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "29a657fc-7452-4c96-aca9-0807d928759c",
                "50e48e16-8812-459f-b2a5-7b1efa93d506",
                "bcf69382-bbca-49b1-85ca-9f8dc98cd537",
                "100527c2-d138-4d73-b512-176859dd9898"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "2db14791-720a-4012-90c7-8fa3662d9e2e",
              "title": "Check if the vendor was actually updated",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/vendor.spec.js",
              "file": "/tests/vendor.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Check if the vendor was actually updated\"",
                  "fullTitle": "Vendor tests Check if the vendor was actually updated \"before all\" hook in \"Check if the vendor was actually updated\"",
                  "timedOut": false,
                  "duration": 952,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "2fb4c3fa-5d8c-4fe9-a23c-761c1c150e0b",
                  "parentUUID": "2db14791-720a-4012-90c7-8fa3662d9e2e",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 200",
                  "fullTitle": "Vendor tests Check if the vendor was actually updated Response status code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "a62b64f9-2d87-47fc-91a4-0b785afb10d6",
                  "parentUUID": "2db14791-720a-4012-90c7-8fa3662d9e2e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Vendor tests Check if the vendor was actually updated Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('Vendor updated');",
                  "err": {},
                  "uuid": "49bce132-6ad2-4f3f-9151-e92e0e97232b",
                  "parentUUID": "2db14791-720a-4012-90c7-8fa3662d9e2e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check if the client name was updated",
                  "fullTitle": "Vendor tests Check if the vendor was actually updated Check if the client name was updated",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(beforeName).not.to.eq(afterName);",
                  "err": {},
                  "uuid": "62135d15-5652-4062-8815-ee61b7c50c1d",
                  "parentUUID": "2db14791-720a-4012-90c7-8fa3662d9e2e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a62b64f9-2d87-47fc-91a4-0b785afb10d6",
                "49bce132-6ad2-4f3f-9151-e92e0e97232b",
                "62135d15-5652-4062-8815-ee61b7c50c1d"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "66d92e0c-cd58-4865-a1dd-35842b4ef325",
              "title": "Update vendor",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/vendor.spec.js",
              "file": "/tests/vendor.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Update vendor\"",
                  "fullTitle": "Vendor tests Update vendor \"before all\" hook in \"Update vendor\"",
                  "timedOut": false,
                  "duration": 431,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "9d7df5c1-d9a9-4877-9efe-ea130b9e0c9c",
                  "parentUUID": "66d92e0c-cd58-4865-a1dd-35842b4ef325",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 200",
                  "fullTitle": "Vendor tests Update vendor Response status code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "aa09a8eb-1d55-4b3e-a694-da6bfc7c0e21",
                  "parentUUID": "66d92e0c-cd58-4865-a1dd-35842b4ef325",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Vendor tests Update vendor Response body returns correct message",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('Vendor updated');",
                  "err": {},
                  "uuid": "14d09527-96e5-4921-b77c-8760108191c1",
                  "parentUUID": "66d92e0c-cd58-4865-a1dd-35842b4ef325",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "aa09a8eb-1d55-4b3e-a694-da6bfc7c0e21",
                "14d09527-96e5-4921-b77c-8760108191c1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "9aa7a3b4-ce28-411a-ab3e-6d5115959129",
              "title": "Delete the vendor",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/vendor.spec.js",
              "file": "/tests/vendor.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Delete the vendor\"",
                  "fullTitle": "Vendor tests Delete the vendor \"before all\" hook in \"Delete the vendor\"",
                  "timedOut": false,
                  "duration": 478,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "89ceb057-ff6a-45b9-8d4b-aa3f12ff0590",
                  "parentUUID": "9aa7a3b4-ce28-411a-ab3e-6d5115959129",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 200",
                  "fullTitle": "Vendor tests Delete the vendor Response status code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "e4d96fe6-c2fd-4282-b836-551f167b192a",
                  "parentUUID": "9aa7a3b4-ce28-411a-ab3e-6d5115959129",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Vendor tests Delete the vendor Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('Vendor deleted');",
                  "err": {},
                  "uuid": "cd5f1c1d-24c3-49a6-a959-30b7ac4e0d5b",
                  "parentUUID": "9aa7a3b4-ce28-411a-ab3e-6d5115959129",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e4d96fe6-c2fd-4282-b836-551f167b192a",
                "cd5f1c1d-24c3-49a6-a959-30b7ac4e0d5b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            },
            {
              "uuid": "018dd837-eadf-4236-9586-0d2ac02dcb34",
              "title": "Check if the vendor actually deleted",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/vendor.spec.js",
              "file": "/tests/vendor.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Check if the vendor actually deleted\"",
                  "fullTitle": "Vendor tests Check if the vendor actually deleted \"before all\" hook in \"Check if the vendor actually deleted\"",
                  "timedOut": false,
                  "duration": 731,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "76f1fda7-d5ec-44d8-84be-804da9c6f844",
                  "parentUUID": "018dd837-eadf-4236-9586-0d2ac02dcb34",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 404",
                  "fullTitle": "Vendor tests Check if the vendor actually deleted Response status code is 404",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(404);",
                  "err": {},
                  "uuid": "00ef025b-7f81-495c-a1dc-201aee59b0cb",
                  "parentUUID": "018dd837-eadf-4236-9586-0d2ac02dcb34",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Vendor tests Check if the vendor actually deleted Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('No vendor for provided id');",
                  "err": {},
                  "uuid": "6dd4e6e4-7b49-4192-b577-f9cf9350aa17",
                  "parentUUID": "018dd837-eadf-4236-9586-0d2ac02dcb34",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "00ef025b-7f81-495c-a1dc-201aee59b0cb",
                "6dd4e6e4-7b49-4192-b577-f9cf9350aa17"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 10000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "MyReportsNew"
      },
      "version": "6.2.0"
    }
  }
}