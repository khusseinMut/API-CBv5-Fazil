{
  "stats": {
    "suites": 27,
    "tests": 55,
    "passes": 55,
    "pending": 0,
    "failures": 0,
    "start": "2023-05-22T22:50:12.121Z",
    "end": "2023-05-22T22:50:28.961Z",
    "duration": 16840,
    "testsRegistered": 55,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "cc7cba82-d2d1-4e71-9fe7-cbe37892ef58",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 254,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
          "err": {},
          "uuid": "cfd93b03-60e7-40f8-a2a0-2f96f21d1d7a",
          "parentUUID": "cc7cba82-d2d1-4e71-9fe7-cbe37892ef58",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [
        {
          "title": "\"after all\" hook: Delete all clients in \"{root}\"",
          "fullTitle": "\"after all\" hook: Delete all clients in \"{root}\"",
          "timedOut": false,
          "duration": 5002,
          "state": "failed",
          "speed": null,
          "pass": false,
          "fail": true,
          "pending": false,
          "context": null,
          "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
          "err": {
            "message": "Error: Timeout of 5000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves.",
            "estack": "Error: Timeout of 5000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves.\n    at listOnTimeout (node:internal/timers:559:17)\n    at processTimers (node:internal/timers:502:7)",
            "diff": null
          },
          "uuid": "148f4f64-2634-48c9-86d2-4f6605a9cfae",
          "parentUUID": "cc7cba82-d2d1-4e71-9fe7-cbe37892ef58",
          "isHook": true,
          "skipped": false
        }
      ],
      "tests": [],
      "suites": [
        {
          "uuid": "a14877e6-aba6-474f-9da5-5c7098fd083e",
          "title": "Autorization test",
          "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/auth.spec.js",
          "file": "/tests/auth.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "beeb6054-0480-467e-84d0-8f7b5feb5673",
              "title": "Autorization with valid data",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/auth.spec.js",
              "file": "/tests/auth.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Autorization with valid data\"",
                  "fullTitle": "Autorization test Autorization with valid data \"before all\" hook in \"Autorization with valid data\"",
                  "timedOut": false,
                  "duration": 229,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "ceae4539-33ea-4932-b855-9f4b5f61929f",
                  "parentUUID": "beeb6054-0480-467e-84d0-8f7b5feb5673",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 200",
                  "fullTitle": "Autorization test Autorization with valid data Response status code is 200",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "19eeb69a-469f-4569-b5a9-760d25637059",
                  "parentUUID": "beeb6054-0480-467e-84d0-8f7b5feb5673",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Autorization test Autorization with valid data Response body returns correct message",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "135327c7-20b6-461e-b2df-fe1d46e84583",
                  "parentUUID": "beeb6054-0480-467e-84d0-8f7b5feb5673",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check the response has token",
                  "fullTitle": "Autorization test Autorization with valid data Check the response has token",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "93219fb3-4837-4f64-bcea-92e9eff8a94d",
                  "parentUUID": "beeb6054-0480-467e-84d0-8f7b5feb5673",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body does not show password",
                  "fullTitle": "Autorization test Autorization with valid data Response body does not show password",
                  "timedOut": false,
                  "duration": 2,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "2d60b92a-c566-4ccc-a765-30a4fcc421c9",
                  "parentUUID": "beeb6054-0480-467e-84d0-8f7b5feb5673",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "19eeb69a-469f-4569-b5a9-760d25637059",
                "135327c7-20b6-461e-b2df-fe1d46e84583",
                "93219fb3-4837-4f64-bcea-92e9eff8a94d",
                "2d60b92a-c566-4ccc-a765-30a4fcc421c9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "fb146603-f615-4a54-b928-3c2dd4413dfd",
              "title": "Autorization with invalid data",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/auth.spec.js",
              "file": "/tests/auth.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Autorization with invalid data\"",
                  "fullTitle": "Autorization test Autorization with invalid data \"before all\" hook in \"Autorization with invalid data\"",
                  "timedOut": false,
                  "duration": 144,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "99b8382a-1752-4b8b-a24d-c701010ce829",
                  "parentUUID": "fb146603-f615-4a54-b928-3c2dd4413dfd",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 400",
                  "fullTitle": "Autorization test Autorization with invalid data Response status code is 400",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "2f1ed0ca-339a-4014-a07e-e38e56902522",
                  "parentUUID": "fb146603-f615-4a54-b928-3c2dd4413dfd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Autorization test Autorization with invalid data Response body returns correct message",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "f49920f1-2fe9-4eaf-bb13-3bd080f00ec2",
                  "parentUUID": "fb146603-f615-4a54-b928-3c2dd4413dfd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "2f1ed0ca-339a-4014-a07e-e38e56902522",
                "f49920f1-2fe9-4eaf-bb13-3bd080f00ec2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "c86db650-9779-4822-9064-efdf24dab1fd",
              "title": "Autorization with empty data",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/auth.spec.js",
              "file": "/tests/auth.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Autorization with empty data\"",
                  "fullTitle": "Autorization test Autorization with empty data \"before all\" hook in \"Autorization with empty data\"",
                  "timedOut": false,
                  "duration": 138,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "3884240b-e834-4561-8ad5-7d0584b88297",
                  "parentUUID": "c86db650-9779-4822-9064-efdf24dab1fd",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 400",
                  "fullTitle": "Autorization test Autorization with empty data Response status code is 400",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "c0762832-91c6-433c-b49a-aac51c33753e",
                  "parentUUID": "c86db650-9779-4822-9064-efdf24dab1fd",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Autorization test Autorization with empty data Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "7d640cb3-ce7b-46c7-96e7-67b254683e46",
                  "parentUUID": "c86db650-9779-4822-9064-efdf24dab1fd",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c0762832-91c6-433c-b49a-aac51c33753e",
                "7d640cb3-ce7b-46c7-96e7-67b254683e46"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "4d757b84-b6b7-47f2-80c3-e119d222dcc2",
              "title": "Check if the email was trimmed",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/auth.spec.js",
              "file": "/tests/auth.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Check if the email was trimmed\"",
                  "fullTitle": "Autorization test Check if the email was trimmed \"before all\" hook in \"Check if the email was trimmed\"",
                  "timedOut": false,
                  "duration": 222,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "78fbd121-965a-41f5-b467-cd0e439586c8",
                  "parentUUID": "4d757b84-b6b7-47f2-80c3-e119d222dcc2",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 200",
                  "fullTitle": "Autorization test Check if the email was trimmed Response status code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "1b757a94-6926-4161-98c0-19b64543b470",
                  "parentUUID": "4d757b84-b6b7-47f2-80c3-e119d222dcc2",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body message returns a correct message",
                  "fullTitle": "Autorization test Check if the email was trimmed Response body message returns a correct message",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "3466ab76-e608-42f6-b2f7-314f9b57d80f",
                  "parentUUID": "4d757b84-b6b7-47f2-80c3-e119d222dcc2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1b757a94-6926-4161-98c0-19b64543b470",
                "3466ab76-e608-42f6-b2f7-314f9b57d80f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "8819b1fc-ed1b-4506-afbd-8f9ec10441ff",
          "title": "Clients tests",
          "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/client.spec.js",
          "file": "/tests/client.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "fa09eff9-1c78-4576-9683-37cb39a553ca",
              "title": "Client create",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/client.spec.js",
              "file": "/tests/client.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Client create\"",
                  "fullTitle": "Clients tests Client create \"before all\" hook in \"Client create\"",
                  "timedOut": false,
                  "duration": 260,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "b5dcae92-281e-48f9-8445-f87734fe5116",
                  "parentUUID": "fa09eff9-1c78-4576-9683-37cb39a553ca",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response code is 200",
                  "fullTitle": "Clients tests Client create Response code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "75aeb627-6a3f-400d-9332-75d46f06d9eb",
                  "parentUUID": "fa09eff9-1c78-4576-9683-37cb39a553ca",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body message returns is correct",
                  "fullTitle": "Clients tests Client create Response body message returns is correct",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('Client created');",
                  "err": {},
                  "uuid": "30023720-208e-4fee-920d-e29c6151af01",
                  "parentUUID": "fa09eff9-1c78-4576-9683-37cb39a553ca",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns success is true",
                  "fullTitle": "Clients tests Client create Response body returns success is true",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body).to.have.property('success', true);",
                  "err": {},
                  "uuid": "25f232d2-f3d1-4dcf-9e50-97e49e992dd2",
                  "parentUUID": "fa09eff9-1c78-4576-9683-37cb39a553ca",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "75aeb627-6a3f-400d-9332-75d46f06d9eb",
                "30023720-208e-4fee-920d-e29c6151af01",
                "25f232d2-f3d1-4dcf-9e50-97e49e992dd2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "48504002-cc7c-428e-acc3-868d5bd95497",
              "title": "Get all clients",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/client.spec.js",
              "file": "/tests/client.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Get all clients\"",
                  "fullTitle": "Clients tests Get all clients \"before all\" hook in \"Get all clients\"",
                  "timedOut": false,
                  "duration": 278,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "c32c7453-c2ac-421c-8b6d-31887793bb27",
                  "parentUUID": "48504002-cc7c-428e-acc3-868d5bd95497",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response code is 200",
                  "fullTitle": "Clients tests Get all clients Response code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "9c9aef35-f1e2-4643-8214-91d3d3879dc9",
                  "parentUUID": "48504002-cc7c-428e-acc3-868d5bd95497",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body message returns is correct",
                  "fullTitle": "Clients tests Get all clients Response body message returns is correct",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('ClientSearch ok');",
                  "err": {},
                  "uuid": "2a18c512-2de3-4928-8416-2949e3a090b5",
                  "parentUUID": "48504002-cc7c-428e-acc3-868d5bd95497",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body contains users array",
                  "fullTitle": "Clients tests Get all clients Response body contains users array",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.payload.items).to.be.an('array');",
                  "err": {},
                  "uuid": "e35e4601-e426-4b52-b1e8-77c6759c01d1",
                  "parentUUID": "48504002-cc7c-428e-acc3-868d5bd95497",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "9c9aef35-f1e2-4643-8214-91d3d3879dc9",
                "2a18c512-2de3-4928-8416-2949e3a090b5",
                "e35e4601-e426-4b52-b1e8-77c6759c01d1"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "d40d534b-762d-47a5-bcd5-03e91b6956b0",
              "title": "Get client by ID",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/client.spec.js",
              "file": "/tests/client.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Get client by ID\"",
                  "fullTitle": "Clients tests Get client by ID \"before all\" hook in \"Get client by ID\"",
                  "timedOut": false,
                  "duration": 485,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "41f62dea-7746-428a-a1b4-cf629160a8a2",
                  "parentUUID": "d40d534b-762d-47a5-bcd5-03e91b6956b0",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 200",
                  "fullTitle": "Clients tests Get client by ID Response status code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "17a98df7-16e3-4fc1-9423-56c534e94afd",
                  "parentUUID": "d40d534b-762d-47a5-bcd5-03e91b6956b0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Clients tests Get client by ID Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('Get Client by id ok');",
                  "err": {},
                  "uuid": "6ba9bfc9-3c6e-4f58-8752-30449209ea14",
                  "parentUUID": "d40d534b-762d-47a5-bcd5-03e91b6956b0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check if the response returns right Id",
                  "fullTitle": "Clients tests Get client by ID Check if the response returns right Id",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.payload._id).to.eq(\"\".concat(clientId));",
                  "err": {},
                  "uuid": "cb96ebcf-191d-4776-bbdd-61e9fa15af8f",
                  "parentUUID": "d40d534b-762d-47a5-bcd5-03e91b6956b0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "17a98df7-16e3-4fc1-9423-56c534e94afd",
                "6ba9bfc9-3c6e-4f58-8752-30449209ea14",
                "cb96ebcf-191d-4776-bbdd-61e9fa15af8f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "d124c293-b1b4-4caf-93c5-9116a56c160d",
              "title": "Get the client by name",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/client.spec.js",
              "file": "/tests/client.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Get the client by name\"",
                  "fullTitle": "Clients tests Get the client by name \"before all\" hook in \"Get the client by name\"",
                  "timedOut": false,
                  "duration": 866,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "b9be0f3a-6876-4351-8d81-b5a3ad17db26",
                  "parentUUID": "d124c293-b1b4-4caf-93c5-9116a56c160d",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 200",
                  "fullTitle": "Clients tests Get the client by name Response status code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "31b3d67f-ac20-40ce-acd0-43c174c1cb6e",
                  "parentUUID": "d124c293-b1b4-4caf-93c5-9116a56c160d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Clients tests Get the client by name Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('ClientSearch ok');",
                  "err": {},
                  "uuid": "0a64c36f-0d28-463c-8c07-9c81540bf805",
                  "parentUUID": "d124c293-b1b4-4caf-93c5-9116a56c160d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response returns 1 client",
                  "fullTitle": "Clients tests Get the client by name Response returns 1 client",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.payload.items).to.be.an('array').to.have.lengthOf.above(0);",
                  "err": {},
                  "uuid": "580d81a4-f173-48c4-a4a8-542460ddff2b",
                  "parentUUID": "d124c293-b1b4-4caf-93c5-9116a56c160d",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check if the client name is right",
                  "fullTitle": "Clients tests Get the client by name Check if the client name is right",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.payload.items[0].name).to.eq(clientName);",
                  "err": {},
                  "uuid": "beb6a66c-cb0e-4e17-9852-6bc9505abf45",
                  "parentUUID": "d124c293-b1b4-4caf-93c5-9116a56c160d",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "31b3d67f-ac20-40ce-acd0-43c174c1cb6e",
                "0a64c36f-0d28-463c-8c07-9c81540bf805",
                "580d81a4-f173-48c4-a4a8-542460ddff2b",
                "beb6a66c-cb0e-4e17-9852-6bc9505abf45"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "b21eb944-44c0-4b98-ba12-7b0f769e8502",
              "title": "Check if the name was actually updated",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/client.spec.js",
              "file": "/tests/client.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Check if the name was actually updated\"",
                  "fullTitle": "Clients tests Check if the name was actually updated \"before all\" hook in \"Check if the name was actually updated\"",
                  "timedOut": false,
                  "duration": 1044,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "51805d1b-2739-4d34-9ac4-371d59ae5ecf",
                  "parentUUID": "b21eb944-44c0-4b98-ba12-7b0f769e8502",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 200",
                  "fullTitle": "Clients tests Check if the name was actually updated Response status code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "51630745-3d43-409f-9ff4-23267a49fa02",
                  "parentUUID": "b21eb944-44c0-4b98-ba12-7b0f769e8502",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Clients tests Check if the name was actually updated Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('Client updated');",
                  "err": {},
                  "uuid": "0c464987-755b-434a-bc1b-0bae8cf13998",
                  "parentUUID": "b21eb944-44c0-4b98-ba12-7b0f769e8502",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check if the client name was updated",
                  "fullTitle": "Clients tests Check if the name was actually updated Check if the client name was updated",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(beforeName).not.to.eq(afterName);",
                  "err": {},
                  "uuid": "e4de8cd4-b2fd-4c47-9d66-3801c9dcab0e",
                  "parentUUID": "b21eb944-44c0-4b98-ba12-7b0f769e8502",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "51630745-3d43-409f-9ff4-23267a49fa02",
                "0c464987-755b-434a-bc1b-0bae8cf13998",
                "e4de8cd4-b2fd-4c47-9d66-3801c9dcab0e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "3a25e13f-0b72-4d43-8be3-150f7d21e60e",
              "title": "Update client",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/client.spec.js",
              "file": "/tests/client.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Update client\"",
                  "fullTitle": "Clients tests Update client \"before all\" hook in \"Update client\"",
                  "timedOut": false,
                  "duration": 447,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "e834957f-abf5-421d-9922-d9a9f71e3bf4",
                  "parentUUID": "3a25e13f-0b72-4d43-8be3-150f7d21e60e",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 200",
                  "fullTitle": "Clients tests Update client Response status code is 200",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "372b6128-9309-41d6-b401-22dc74677560",
                  "parentUUID": "3a25e13f-0b72-4d43-8be3-150f7d21e60e",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Clients tests Update client Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('Client updated');",
                  "err": {},
                  "uuid": "1d9abfc3-ffa6-41a5-ab66-c8dcf6c73385",
                  "parentUUID": "3a25e13f-0b72-4d43-8be3-150f7d21e60e",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "372b6128-9309-41d6-b401-22dc74677560",
                "1d9abfc3-ffa6-41a5-ab66-c8dcf6c73385"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "786f46b8-e2df-4ba2-9a1a-4b716a16aebb",
              "title": "Delete the client",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/client.spec.js",
              "file": "/tests/client.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Delete the client\"",
                  "fullTitle": "Clients tests Delete the client \"before all\" hook in \"Delete the client\"",
                  "timedOut": false,
                  "duration": 504,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "ba915c95-6474-4d7a-b438-02e54e87daa6",
                  "parentUUID": "786f46b8-e2df-4ba2-9a1a-4b716a16aebb",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 200",
                  "fullTitle": "Clients tests Delete the client Response status code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "c027a998-0d59-4d69-8b78-2aafa7da0a00",
                  "parentUUID": "786f46b8-e2df-4ba2-9a1a-4b716a16aebb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Clients tests Delete the client Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('Client deleted');",
                  "err": {},
                  "uuid": "3b489378-b2da-4853-b0d8-e55f8fbaeefd",
                  "parentUUID": "786f46b8-e2df-4ba2-9a1a-4b716a16aebb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c027a998-0d59-4d69-8b78-2aafa7da0a00",
                "3b489378-b2da-4853-b0d8-e55f8fbaeefd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "b4f0ceb5-b113-434a-be86-42ddb3f573f4",
              "title": "Check if the client actually deleted",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/client.spec.js",
              "file": "/tests/client.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Check if the client actually deleted\"",
                  "fullTitle": "Clients tests Check if the client actually deleted \"before all\" hook in \"Check if the client actually deleted\"",
                  "timedOut": false,
                  "duration": 705,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "081f2d28-ca65-468a-a0f7-351ec4a4caaf",
                  "parentUUID": "b4f0ceb5-b113-434a-be86-42ddb3f573f4",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 404",
                  "fullTitle": "Clients tests Check if the client actually deleted Response status code is 404",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(404);",
                  "err": {},
                  "uuid": "ae46feb4-2cdf-4363-ac7c-549934c1f855",
                  "parentUUID": "b4f0ceb5-b113-434a-be86-42ddb3f573f4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Clients tests Check if the client actually deleted Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('No client for provided id');",
                  "err": {},
                  "uuid": "5ac217fd-ebea-4008-a9cd-ff2a79a59612",
                  "parentUUID": "b4f0ceb5-b113-434a-be86-42ddb3f573f4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ae46feb4-2cdf-4363-ac7c-549934c1f855",
                "5ac217fd-ebea-4008-a9cd-ff2a79a59612"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "851a1668-4c54-4d38-93a3-6a959f35aea3",
          "title": "Registration test",
          "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/registration.spec.js",
          "file": "/tests/registration.spec.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "2abdfd32-33cb-4160-827a-28644abe43c4",
              "title": "Register/create news user with valid credentials",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/registration.spec.js",
              "file": "/tests/registration.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Register/create news user with valid credentials\"",
                  "fullTitle": "Registration test Register/create news user with valid credentials \"before all\" hook in \"Register/create news user with valid credentials\"",
                  "timedOut": false,
                  "duration": 591,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "e320b9de-12f8-4cc5-bb6d-fecd65023236",
                  "parentUUID": "2abdfd32-33cb-4160-827a-28644abe43c4",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 201",
                  "fullTitle": "Registration test Register/create news user with valid credentials Response status code is 201",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(201);",
                  "err": {},
                  "uuid": "c27805b5-8113-4795-a83a-e8c7545e37a4",
                  "parentUUID": "2abdfd32-33cb-4160-827a-28644abe43c4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Registration test Register/create news user with valid credentials Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('User created successfully. Please check your email and verify it');",
                  "err": {},
                  "uuid": "2d8784ab-0f63-4cc2-aabe-1e8245506e9a",
                  "parentUUID": "2abdfd32-33cb-4160-827a-28644abe43c4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c27805b5-8113-4795-a83a-e8c7545e37a4",
                "2d8784ab-0f63-4cc2-aabe-1e8245506e9a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "e5574f0f-cf33-4481-b001-4684daf6bcb9",
              "title": "Register/create new user without companyName",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/registration.spec.js",
              "file": "/tests/registration.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Register/create new user without companyName\"",
                  "fullTitle": "Registration test Register/create new user without companyName \"before all\" hook in \"Register/create new user without companyName\"",
                  "timedOut": false,
                  "duration": 478,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "c243e619-cef1-4160-8861-a1f65392fb99",
                  "parentUUID": "e5574f0f-cf33-4481-b001-4684daf6bcb9",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 201",
                  "fullTitle": "Registration test Register/create new user without companyName Response status code is 201",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(201);",
                  "err": {},
                  "uuid": "62addea5-fe15-43e4-94eb-a49876c095b0",
                  "parentUUID": "e5574f0f-cf33-4481-b001-4684daf6bcb9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Registration test Register/create new user without companyName Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('User created successfully. Please check your email and verify it');",
                  "err": {},
                  "uuid": "f37de20e-da99-4f02-9397-0efe15dee212",
                  "parentUUID": "e5574f0f-cf33-4481-b001-4684daf6bcb9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "62addea5-fe15-43e4-94eb-a49876c095b0",
                "f37de20e-da99-4f02-9397-0efe15dee212"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "c6b360fe-162e-44e0-bb98-a11e15250b1f",
              "title": "Register/create new user without firstName",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/registration.spec.js",
              "file": "/tests/registration.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Register/create new user without firstName\"",
                  "fullTitle": "Registration test Register/create new user without firstName \"before all\" hook in \"Register/create new user without firstName\"",
                  "timedOut": false,
                  "duration": 613,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "a086e555-8300-48eb-9856-05cbe3be7999",
                  "parentUUID": "c6b360fe-162e-44e0-bb98-a11e15250b1f",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 404",
                  "fullTitle": "Registration test Register/create new user without firstName Response status code is 404",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(404);",
                  "err": {},
                  "uuid": "c0c0f783-7227-486a-8d1d-afc9527aa1ea",
                  "parentUUID": "c6b360fe-162e-44e0-bb98-a11e15250b1f",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Registration test Register/create new user without firstName Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('User was not created');",
                  "err": {},
                  "uuid": "2d05480b-abca-460d-ab11-d81b08dc37e5",
                  "parentUUID": "c6b360fe-162e-44e0-bb98-a11e15250b1f",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "c0c0f783-7227-486a-8d1d-afc9527aa1ea",
                "2d05480b-abca-460d-ab11-d81b08dc37e5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "9aa91f10-899b-4cba-9724-5a170cca98b0",
              "title": "Register/create new user without lastName",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/registration.spec.js",
              "file": "/tests/registration.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Register/create new user without lastName\"",
                  "fullTitle": "Registration test Register/create new user without lastName \"before all\" hook in \"Register/create new user without lastName\"",
                  "timedOut": false,
                  "duration": 615,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "fc495bbe-da4a-4497-86e3-1178a5ed52df",
                  "parentUUID": "9aa91f10-899b-4cba-9724-5a170cca98b0",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 404",
                  "fullTitle": "Registration test Register/create new user without lastName Response status code is 404",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(404);",
                  "err": {},
                  "uuid": "7c540745-d070-4144-b977-c99e7df68045",
                  "parentUUID": "9aa91f10-899b-4cba-9724-5a170cca98b0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Registration test Register/create new user without lastName Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('User was not created');",
                  "err": {},
                  "uuid": "f9a0a7ca-0e42-488c-b70f-2836859455b6",
                  "parentUUID": "9aa91f10-899b-4cba-9724-5a170cca98b0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "7c540745-d070-4144-b977-c99e7df68045",
                "f9a0a7ca-0e42-488c-b70f-2836859455b6"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "e879df00-d411-48e9-98ef-6521801eefbc",
              "title": "Register/create new user without email",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/registration.spec.js",
              "file": "/tests/registration.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Register/create new user without email\"",
                  "fullTitle": "Registration test Register/create new user without email \"before all\" hook in \"Register/create new user without email\"",
                  "timedOut": false,
                  "duration": 611,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "1a38bd6f-daba-4745-816b-23d26e8a4074",
                  "parentUUID": "e879df00-d411-48e9-98ef-6521801eefbc",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 404",
                  "fullTitle": "Registration test Register/create new user without email Response status code is 404",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(404);",
                  "err": {},
                  "uuid": "ee6b7c74-3534-4d4f-9d66-1a011899c04c",
                  "parentUUID": "e879df00-d411-48e9-98ef-6521801eefbc",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Registration test Register/create new user without email Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('User was not created');",
                  "err": {},
                  "uuid": "6de153f4-ff15-4e17-b17d-7815f3a384b8",
                  "parentUUID": "e879df00-d411-48e9-98ef-6521801eefbc",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ee6b7c74-3534-4d4f-9d66-1a011899c04c",
                "6de153f4-ff15-4e17-b17d-7815f3a384b8"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "570c80c5-f22b-4976-a822-ad2abc07794c",
              "title": "Register/create new user without password",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/registration.spec.js",
              "file": "/tests/registration.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Register/create new user without password\"",
                  "fullTitle": "Registration test Register/create new user without password \"before all\" hook in \"Register/create new user without password\"",
                  "timedOut": false,
                  "duration": 78,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "a710fb43-2a62-4ee0-b694-b9cf063e5480",
                  "parentUUID": "570c80c5-f22b-4976-a822-ad2abc07794c",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 400",
                  "fullTitle": "Registration test Register/create new user without password Response status code is 400",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(400);",
                  "err": {},
                  "uuid": "b9e7e018-3210-4c75-9d93-f36ee3ff00b8",
                  "parentUUID": "570c80c5-f22b-4976-a822-ad2abc07794c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Registration test Register/create new user without password Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('Wrong password format');",
                  "err": {},
                  "uuid": "d02d2bc2-0a6c-444a-b5cf-c7c2c3b47cac",
                  "parentUUID": "570c80c5-f22b-4976-a822-ad2abc07794c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "b9e7e018-3210-4c75-9d93-f36ee3ff00b8",
                "d02d2bc2-0a6c-444a-b5cf-c7c2c3b47cac"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "e996c790-1797-4d16-bcf0-5dd883d77d35",
              "title": "Create a user with existing email",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/registration.spec.js",
              "file": "/tests/registration.spec.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Create a user with existing email\"",
                  "fullTitle": "Registration test Create a user with existing email \"before all\" hook in \"Create a user with existing email\"",
                  "timedOut": false,
                  "duration": 138,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "d2cc303d-e7ae-44b6-b62d-38537a0d1419",
                  "parentUUID": "e996c790-1797-4d16-bcf0-5dd883d77d35",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 409",
                  "fullTitle": "Registration test Create a user with existing email Response status code is 409",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(409);",
                  "err": {},
                  "uuid": "5fa3113c-3d43-49b8-9e3f-c4314a50066c",
                  "parentUUID": "e996c790-1797-4d16-bcf0-5dd883d77d35",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body returns correct message",
                  "fullTitle": "Registration test Create a user with existing email Response body returns correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.message).to.eq('User with this e-mail exists');",
                  "err": {},
                  "uuid": "b9a73a4a-484f-40ea-a641-c8eec3c22ad2",
                  "parentUUID": "e996c790-1797-4d16-bcf0-5dd883d77d35",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "5fa3113c-3d43-49b8-9e3f-c4314a50066c",
                "b9a73a4a-484f-40ea-a641-c8eec3c22ad2"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "260792f9-8bdd-4b79-9359-10261c4a0e91",
          "title": "Various tests",
          "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/various-tests.js",
          "file": "/tests/various-tests.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "7275cead-7ea6-4d81-84ab-32d2768351d8",
              "title": "Email verification",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/various-tests.js",
              "file": "/tests/various-tests.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Email verification\"",
                  "fullTitle": "Various tests Email verification \"before all\" hook in \"Email verification\"",
                  "timedOut": false,
                  "duration": 1320,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "54ff9154-f2cc-496c-80da-34295e238fd6",
                  "parentUUID": "7275cead-7ea6-4d81-84ab-32d2768351d8",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Check the response status",
                  "fullTitle": "Various tests Email verification Check the response status",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(res.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "fa802341-f281-48e8-b290-d599ce27ddc3",
                  "parentUUID": "7275cead-7ea6-4d81-84ab-32d2768351d8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check the response message",
                  "fullTitle": "Various tests Email verification Check the response message",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(res.body.message).to.include('confirmed');",
                  "err": {},
                  "uuid": "b2bcba7d-f392-4f67-a8f9-d07544076fa7",
                  "parentUUID": "7275cead-7ea6-4d81-84ab-32d2768351d8",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Check the response status",
                  "fullTitle": "Various tests Email verification Check the response status",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(check.body.payload.user.roles).to.include('verified');",
                  "err": {},
                  "uuid": "77fd6072-cbc7-40c0-94ac-791db00021e9",
                  "parentUUID": "7275cead-7ea6-4d81-84ab-32d2768351d8",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "fa802341-f281-48e8-b290-d599ce27ddc3",
                "b2bcba7d-f392-4f67-a8f9-d07544076fa7",
                "77fd6072-cbc7-40c0-94ac-791db00021e9"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "7ccc7ea1-45e6-4d93-be38-11121443e319",
              "title": "Get user by ID",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/various-tests.js",
              "file": "/tests/various-tests.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Get user by ID\"",
                  "fullTitle": "Various tests Get user by ID \"before all\" hook in \"Get user by ID\"",
                  "timedOut": false,
                  "duration": 492,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "5d1d9a25-99d1-45b7-be46-92398e1eb3f1",
                  "parentUUID": "7ccc7ea1-45e6-4d93-be38-11121443e319",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response code is 200",
                  "fullTitle": "Various tests Get user by ID Response code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(getUser.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "f33e6142-b15d-4788-a385-8cbe39978bf0",
                  "parentUUID": "7ccc7ea1-45e6-4d93-be38-11121443e319",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body message returns a correct message",
                  "fullTitle": "Various tests Get user by ID Response body message returns a correct message",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(getUser.body.message).to.eq('User found');",
                  "err": {},
                  "uuid": "66bcdd95-4ea0-43dc-9142-e3a73846e958",
                  "parentUUID": "7ccc7ea1-45e6-4d93-be38-11121443e319",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f33e6142-b15d-4788-a385-8cbe39978bf0",
                "66bcdd95-4ea0-43dc-9142-e3a73846e958"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "38608bc9-28ec-460d-ba67-dded2e57e6ea",
              "title": "Get all users",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/various-tests.js",
              "file": "/tests/various-tests.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Get all users\"",
                  "fullTitle": "Various tests Get all users \"before all\" hook in \"Get all users\"",
                  "timedOut": false,
                  "duration": 341,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "1705d8df-ef99-42b9-8a24-d7b6326362ef",
                  "parentUUID": "38608bc9-28ec-460d-ba67-dded2e57e6ea",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response code is 200",
                  "fullTitle": "Various tests Get all users Response code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "1bde7ad0-92e7-4cac-8dd1-880d6cae0664",
                  "parentUUID": "38608bc9-28ec-460d-ba67-dded2e57e6ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body contains users array",
                  "fullTitle": "Various tests Get all users Response body contains users array",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body).to.be.an('object');",
                  "err": {},
                  "uuid": "d8f12321-2926-4845-91ee-70b1fae7a278",
                  "parentUUID": "38608bc9-28ec-460d-ba67-dded2e57e6ea",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Response body does not show password",
                  "fullTitle": "Various tests Get all users Response body does not show password",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.body.items).to.be.an('array');",
                  "err": {},
                  "uuid": "9b2fc9d2-efb6-4f1f-bf27-d2f6cc258320",
                  "parentUUID": "38608bc9-28ec-460d-ba67-dded2e57e6ea",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "1bde7ad0-92e7-4cac-8dd1-880d6cae0664",
                "d8f12321-2926-4845-91ee-70b1fae7a278",
                "9b2fc9d2-efb6-4f1f-bf27-d2f6cc258320"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            },
            {
              "uuid": "a8ba3baf-1d73-4813-b902-d2122610f3a6",
              "title": "Space trimming",
              "fullFile": "/Users/kmutsolgov/WebstormProjects/API-CBv5-Fazil/tests/various-tests.js",
              "file": "/tests/various-tests.js",
              "beforeHooks": [
                {
                  "title": "\"before all\" hook in \"Space trimming\"",
                  "fullTitle": "Various tests Space trimming \"before all\" hook in \"Space trimming\"",
                  "timedOut": false,
                  "duration": 910,
                  "state": null,
                  "speed": null,
                  "pass": false,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
                  "err": {},
                  "uuid": "e406997f-0b0c-41d3-9fd2-0426e344f292",
                  "parentUUID": "a8ba3baf-1d73-4813-b902-d2122610f3a6",
                  "isHook": true,
                  "skipped": false
                }
              ],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Response status code is 200",
                  "fullTitle": "Various tests Space trimming Response status code is 200",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _chai.expect)(response.statusCode).to.eq(200);",
                  "err": {},
                  "uuid": "6fd82260-a474-4612-9150-a453e8d2722a",
                  "parentUUID": "a8ba3baf-1d73-4813-b902-d2122610f3a6",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "6fd82260-a474-4612-9150-a453e8d2722a"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 5000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "[status]_[datetime]-updatedReportNew",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "MyReportsNew",
        "reportFilename": "[status]_[datetime]-updatedReportNew"
      },
      "version": "6.2.0"
    }
  }
}